#!/bin/sh
#
# Author: Aaron Voisine <aaron@voisine.org>
# Inkscape Modifications:
#	Michael Wybrow <mjwybrow@users.sourceforge.net>
#	Jean-Olivier Irisson <jo.irisson@gmail.com>
#

CWD="`(cd \"\`dirname \\\"$0\\\"\`\"; echo \"$PWD\")`"
# e.g. /Applications/Inkscape.app/Contents/Resources/bin
TOP="`dirname \"$CWD\"`"
# e.g. /Applications/Inkscape.app/Contents/Resources


# Brutally add many things to the PATH. If the directories do not exist, they won't be used anyway. 
# People should really use ~/.macosx/environment.plist to set environment variables as explained by Apple:
#	http://developer.apple.com/qa/qa2001/qa1067.html
# but since no one does, we correct this by making the 'classic' PATH additions here:
#	/usr/local/bin which, though standard, doesn't seem to be in the PATH
# 	newer python as recommended by MacPython http://www.python.org/download/mac/
#	Fink
#	MacPorts (former DarwinPorts)
#	LaTeX distribution for Mac OS X
export PATH="/usr/texbin:/opt/local/bin:/sw/bin/:/Library/Frameworks/Python.framework/Versions/Current/bin:/usr/local/bin:$CWD:$PATH"

# Put /usr/bin at beginning of path so we make sure we use Apple's python 
# over one that may be installed be Macports, Fink or some other means.
export PATH="/usr/bin:$PATH"

# On Snow Leopard, use the 32-bit version of python from Universal build.
# This is because our bundled i386 python libraries are 32-bit only.
export VERSIONER_PYTHON_VERSION=2.6
export VERSIONER_PYTHON_PREFER_32_BIT=yes


# Setup PYTHONPATH to use python modules shipped with Inkscape
ARCH=`arch`
PYTHON_VERS=`python -V 2>&1 | cut -c 8-10`
export PYTHONPATH="$TOP/python/site-packages/$ARCH/$PYTHON_VERS"
# NB: we are only preprending some stuff to the default python path so if the directory does not exist it should not harm the rest

# No longer required if path rewriting has been conducted.
# export DYLD_LIBRARY_PATH="$TOP/lib"

export XDG_CACHE_HOME="${HOME}/.cache"
export XDG_CONFIG_HOME="${HOME}/.config"
export XDG_DATA_HOME="${HOME}/.local/share"

mkdir -p "$XDG_CACHE_HOME"
mkdir -p "$XDG_CONFIG_HOME"
mkdir -p "$XDG_DATA_HOME"

INK_CACHE_DIR="${XDG_CACHE_HOME}/inkscape"
#INK_CACHE_DIR="${HOME}/.inkscape-etc"
mkdir -p "$INK_CACHE_DIR"

export FONTCONFIG_PATH="$TOP/etc/fonts"
export PANGO_RC_FILE="${INK_CACHE_DIR}/pangorc"
export GTK_IM_MODULE_FILE="${INK_CACHE_DIR}/immodules.cache"
export GDK_PIXBUF_MODULE_FILE="${INK_CACHE_DIR}/loaders.cache"
export GTK_DATA_PREFIX="$TOP"
export GTK_EXE_PREFIX="$TOP"
export GNOME_VFS_MODULE_CONFIG_PATH="$TOP/etc/gnome-vfs-2.0/modules"
export GNOME_VFS_MODULE_PATH="$TOP/lib/gnome-vfs-2.0/modules"
export XDG_DATA_DIRS="$TOP/share"
export ASPELL_CONF="prefix $TOP;"

# Note: This requires the path with the exact ImageMagic version number.
#        Also, that ImageMagick will only work if it does not find a 
#        version installed into the same PREFIX as it was originally 
#        installed.  Luckily, this is very unlikely given the extra long 
#        and strangely named install prefix we use.
#        The actual version is inserted by the packaging script.
export MAGICK_CONFIGURE_PATH="$TOP/lib/ImageMagick-IMAGEMAGICKVER/config:$TOP/share/ImageMagick-IMAGEMAGICKVER/config"
export MAGICK_CODER_FILTER_PATH="$TOP/lib/ImageMagick-IMAGEMAGICKVER/modules-Q16/filters"
export MAGICK_CODER_MODULE_PATH="$TOP/lib/ImageMagick-IMAGEMAGICKVER/modules-Q16/coders"

export INKSCAPE_SHAREDIR="$TOP"
# TODO: move the share directory to a its own folder to make things a bit cleaner in the app bundle
export INKSCAPE_PLUGINDIR="$TOP/lib/inkscape"
export INKSCAPE_LOCALEDIR="$TOP/locale"

# Handle the case where the directory storing Inkscape has special characters
# ('#', '&', '|') in the name.  These need to be escaped to work properly for 
# various configuration files.
ESCAPEDTOP=`echo "$TOP" | sed 's/#/\\\\\\\\#/' | sed 's/&/\\\\\\&/g' | sed 's/|/\\\\\\|/g'`

# Set GTK theme (only if there is no .gtkrc-2.0 in the user's home)
if [[ ! -e "$HOME/.gtkrc-2.0" ]]; then
	export GTK2_RC_FILES="$ESCAPEDTOP/etc/gtk-2.0/gtkrc"
fi

# If the AppleCollationOrder preference doesn't exist, we fall back to using
# the AppleLocale preference.
LANGSTR=`defaults read .GlobalPreferences AppleCollationOrder 2>/dev/null`
if [ "x$LANGSTR" == "x" -o "x$LANGSTR" == "xroot" ]
then
    LANGSTR=`defaults read .GlobalPreferences AppleLocale 2>/dev/null | \
            sed 's/_.*//'`
	[ $_DEBUG ] && echo "Setting LANGSTR from AppleLocale: $LANGSTR" 1>&2
else
	[ $_DEBUG ] && echo "Setting LANGSTR from AppleCollationOrder: $LANGSTR" 1>&2
fi

# NOTE: Have to add ".UTF-8" to the LANG since omitting causes Inkscape
#       to crash on startup in locale_from_utf8().
if [ "x$LANGSTR" == "x" ]
then 
	# override broken script
	[ $_DEBUG ] && echo "Overriding empty LANGSTR" 1>&2
	export LANG="en_US.UTF-8"
else
	tmpLANG="`grep \"\`echo $LANGSTR\`_\" /usr/share/locale/locale.alias | \
		tail -n1 | sed 's/\./ /' | awk '{print $2}'`"
	if [ "x$tmpLANG" == "x" ]
	then
		# override broken script
		[ $_DEBUG ] && echo "Overriding empty LANG from /usr/share/locale/locale.alias" 1>&2
		export LANG="en_US.UTF-8"
	else
		[ $_DEBUG ] && echo "Setting LANG from /usr/share/locale/locale.alias" 1>&2
		export LANG="$tmpLANG.UTF-8"
	fi
fi
[ $_DEBUG ] && echo "Setting Language: $LANG" 1>&2
export LC_ALL="$LANG"

sed 's|${INK_CACHE_DIR}|'"$INK_CACHE_DIR|g" "$TOP/etc/pango/pangorc" > "${INK_CACHE_DIR}/pangorc"
sed 's|${CWD}|'"$ESCAPEDTOP|g" "$TOP/etc/pango/pango.modules" \
    > "${INK_CACHE_DIR}/pango.modules"
sed 's|${CWD}|'"$ESCAPEDTOP|g" "$TOP/lib/gtk-2.0/__gtk_version__/immodules.cache" \
    > "${INK_CACHE_DIR}/immodules.cache"
sed 's|${CWD}|'"$ESCAPEDTOP|g" "$TOP/lib/gdk-pixbuf-2.0/__gdk_pixbuf_version__/loaders.cache" \
    > "${INK_CACHE_DIR}/loaders.cache"

exec "$CWD/inkscape-bin" "$@"
