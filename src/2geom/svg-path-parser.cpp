#line 1 "/opt/shared/work/programming/eclipse/eclipse_3.3/lib2geom/src/svg-path-parser.rl"
/*
 * parse SVG path specifications
 *
 * Copyright 2007 MenTaLguY <mental@rydia.net>
 * Copyright 2007 Aaron Spike <aaron@ekips.org>
 *
 * This library is free software; you can redistribute it and/or
 * modify it either under the terms of the GNU Lesser General Public
 * License version 2.1 as published by the Free Software Foundation
 * (the "LGPL") or, at your option, under the terms of the Mozilla
 * Public License Version 1.1 (the "MPL"). If you do not alter this
 * notice, a recipient may use your version of this file under either
 * the MPL or the LGPL.
 *
 * You should have received a copy of the LGPL along with this library
 * in the file COPYING-LGPL-2.1; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 * You should have received a copy of the MPL along with this library
 * in the file COPYING-MPL-1.1
 *
 * The contents of this file are subject to the Mozilla Public License
 * Version 1.1 (the "License"); you may not use this file except in
 * compliance with the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY
 * OF ANY KIND, either express or implied. See the LGPL or the MPL for
 * the specific language governing rights and limitations.
 *
 */


#include <cmath>
#include <vector>
#include <glib.h>

#include "point.h"

#include "svg-path-parser.h"

namespace Geom {

namespace {

class Parser {
public:
    Parser(SVGPathSink &sink) : _sink(sink) {}

    void parse(char const *str) throw(SVGPathParseError);

private:
    bool _absolute;
    Point _current;
    Point _initial;
    Point _cubic_tangent;
    Point _quad_tangent;
    std::vector<double> _params;
    SVGPathSink &_sink;

    void _reset() {
        _absolute = false;
        _current = _initial = Point(0, 0);
        _quad_tangent = _cubic_tangent = Point(0, 0);
        _params.clear();
    }

    void _push(double value) {
        _params.push_back(value);
    }

    double _pop() {
        double value = _params.back();
        _params.pop_back();
        return value;
    }

    bool _pop_flag() {
        return _pop() != 0.0;
    }

    double _pop_coord(Geom::Dim2 axis) {
        if (_absolute) {
            return _pop();
        } else {
            return _pop() + _current[axis];
        }
    }

    Point _pop_point() {
        double y = _pop_coord(Geom::Y);
        double x = _pop_coord(Geom::X);
        return Point(x, y);
    }

    void _moveTo(Point p) {
        _quad_tangent = _cubic_tangent = _current = _initial = p;
        _sink.moveTo(p);
    }

    void _lineTo(Point p) {
        _quad_tangent = _cubic_tangent = _current = p;
        _sink.lineTo(p);
    }

    void _curveTo(Point c0, Point c1, Point p) {
        _quad_tangent = _current = p;
        _cubic_tangent = p + ( p - c1 );
        _sink.curveTo(c0, c1, p);
    }

    void _quadTo(Point c, Point p) {
        _cubic_tangent = _current = p;
        _quad_tangent = p + ( p - c );
        _sink.quadTo(c, p);
    }

    void _arcTo(double rx, double ry, double angle,
                bool large_arc, bool sweep, Point p)
    {
        _quad_tangent = _cubic_tangent = _current = p;
        _sink.arcTo(rx, ry, angle, large_arc, sweep, p);
    }

    void _closePath() {
        _quad_tangent = _cubic_tangent = _current = _initial;
        _sink.closePath();
    }
};


#line 133 "/opt/shared/work/programming/eclipse/eclipse_3.3/lib2geom/src/svg-path-parser.cpp"
static const char _svg_path_actions[] = {
	0, 1, 0, 1, 1, 1, 2, 1, 
	3, 1, 4, 1, 5, 1, 15, 1, 
	16, 2, 1, 0, 2, 1, 2, 2, 
	1, 3, 2, 1, 6, 2, 1, 7, 
	2, 1, 8, 2, 1, 9, 2, 1, 
	10, 2, 1, 11, 2, 1, 12, 2, 
	1, 13, 2, 1, 14, 2, 2, 1, 
	2, 3, 1, 2, 4, 0, 2, 5, 
	0, 2, 15, 16, 3, 1, 6, 0, 
	3, 1, 6, 16, 3, 1, 7, 0, 
	3, 1, 7, 16, 3, 1, 8, 0, 
	3, 1, 8, 16, 3, 1, 9, 0, 
	3, 1, 9, 16, 3, 1, 10, 0, 
	3, 1, 10, 16, 3, 1, 11, 0, 
	3, 1, 11, 16, 3, 1, 12, 0, 
	3, 1, 12, 16, 3, 1, 13, 0, 
	3, 1, 13, 16, 3, 1, 14, 0, 
	3, 1, 14, 16
};

static const short _svg_path_key_offsets[] = {
	0, 0, 7, 16, 25, 28, 30, 42, 
	52, 55, 57, 90, 121, 124, 126, 138, 
	148, 151, 153, 186, 195, 207, 216, 249, 
	256, 263, 265, 275, 283, 290, 292, 304, 
	314, 317, 319, 328, 335, 341, 346, 353, 
	359, 364, 374, 377, 379, 391, 401, 404, 
	406, 437, 466, 476, 488, 498, 507, 509, 
	521, 533, 544, 554, 561, 567, 572, 584, 
	595, 607, 617, 620, 622, 655, 664, 695, 
	704, 713, 716, 718, 730, 740, 743, 745, 
	757, 767, 770, 772, 784, 794, 797, 799, 
	811, 821, 824, 826, 838, 848, 851, 853, 
	886, 917, 929, 938, 950, 959, 971, 980, 
	992, 1001, 1013, 1022, 1055, 1059, 1061, 1092, 
	1101, 1110, 1113, 1115, 1148, 1179, 1182, 1184, 
	1217, 1226, 1259, 1263, 1265, 1296, 1305, 1314, 
	1323, 1326, 1328, 1340, 1350, 1353, 1355, 1367, 
	1377, 1380, 1382, 1394, 1404, 1407, 1409, 1442, 
	1473, 1485, 1494, 1506, 1515, 1527, 1536, 1569, 
	1573, 1575, 1606, 1615, 1624, 1627, 1629, 1641, 
	1651, 1654, 1656, 1668, 1678, 1681, 1683, 1695, 
	1705, 1708, 1710, 1743, 1774, 1786, 1795, 1807, 
	1816, 1828, 1837, 1870, 1874, 1876, 1907, 1916, 
	1925, 1928, 1930, 1942, 1952, 1955, 1957, 1990, 
	2021, 2033, 2042, 2075, 2079, 2081, 2112, 2121, 
	2130, 2133, 2135, 2168, 2199, 2202, 2204, 2237, 
	2246, 2279, 2283, 2285, 2316, 2341, 2366, 2373, 
	2382, 2391, 2424, 2428, 2430, 2461, 2494, 2503, 
	2512, 2524, 2533, 2566, 2570, 2572, 2603, 2612, 
	2621, 2630, 2639, 2672, 2676, 2678, 2709, 2742, 
	2746, 2748, 2758, 2791, 2795, 2797, 2807, 2811, 
	2813, 2823, 2827, 2829, 2839, 2843, 2845, 2855, 
	2859, 2861, 2871, 2875, 2877, 2887, 2891, 2893, 
	2903, 2936, 2940, 2942, 2952, 2956, 2958, 2968, 
	2972, 2974, 2984, 2988, 2990, 3000, 3004, 3006, 
	3016, 3020, 3022, 3051, 3055, 3057, 3088, 3121, 
	3130, 3142, 3146, 3148, 3158, 3170, 3175, 3185, 
	3189, 3191, 3198, 3208, 3212, 3214, 3224, 3236, 
	3248, 3260, 3264, 3266, 3276, 3288, 3292, 3294, 
	3304, 3313, 3317, 3319, 3327, 3336, 3341, 3346, 
	3358, 3362, 3364, 3395, 3399, 3401, 3411
};

static const char _svg_path_trans_keys[] = {
	0, 13, 32, 77, 109, 9, 10, 13, 
	32, 43, 45, 46, 9, 10, 48, 57, 
	13, 32, 43, 45, 46, 9, 10, 48, 
	57, 46, 48, 57, 48, 57, 13, 32, 
	44, 46, 69, 101, 9, 10, 43, 45, 
	48, 57, 13, 32, 44, 46, 9, 10, 
	43, 45, 48, 57, 46, 48, 57, 48, 
	57, 0, 13, 32, 44, 46, 65, 67, 
	69, 72, 76, 77, 81, 83, 84, 86, 
	90, 97, 99, 101, 104, 108, 109, 113, 
	115, 116, 118, 122, 9, 10, 43, 45, 
	48, 57, 0, 13, 32, 44, 46, 65, 
	67, 72, 76, 77, 81, 83, 84, 86, 
	90, 97, 99, 104, 108, 109, 113, 115, 
	116, 118, 122, 9, 10, 43, 45, 48, 
	57, 46, 48, 57, 48, 57, 13, 32, 
	44, 46, 69, 101, 9, 10, 43, 45, 
	48, 57, 13, 32, 44, 46, 9, 10, 
	43, 45, 48, 57, 46, 48, 57, 48, 
	57, 0, 13, 32, 44, 46, 65, 67, 
	69, 72, 76, 77, 81, 83, 84, 86, 
	90, 97, 99, 101, 104, 108, 109, 113, 
	115, 116, 118, 122, 9, 10, 43, 45, 
	48, 57, 13, 32, 43, 45, 46, 9, 
	10, 48, 57, 13, 32, 44, 46, 69, 
	101, 9, 10, 43, 45, 48, 57, 13, 
	32, 43, 45, 46, 9, 10, 48, 57, 
	0, 13, 32, 44, 46, 65, 67, 69, 
	72, 76, 77, 81, 83, 84, 86, 90, 
	97, 99, 101, 104, 108, 109, 113, 115, 
	116, 118, 122, 9, 10, 43, 45, 48, 
	57, 13, 32, 46, 9, 10, 48, 57, 
	13, 32, 46, 9, 10, 48, 57, 48, 
	57, 13, 32, 44, 46, 69, 101, 9, 
	10, 48, 57, 13, 32, 44, 46, 9, 
	10, 48, 57, 13, 32, 46, 9, 10, 
	48, 57, 48, 57, 13, 32, 44, 46, 
	69, 101, 9, 10, 43, 45, 48, 57, 
	13, 32, 44, 46, 9, 10, 43, 45, 
	48, 57, 46, 48, 57, 48, 57, 13, 
	32, 44, 69, 101, 9, 10, 48, 57, 
	13, 32, 44, 48, 49, 9, 10, 13, 
	32, 48, 49, 9, 10, 13, 32, 44, 
	9, 10, 13, 32, 44, 48, 49, 9, 
	10, 13, 32, 48, 49, 9, 10, 13, 
	32, 44, 9, 10, 13, 32, 44, 46, 
	9, 10, 43, 45, 48, 57, 46, 48, 
	57, 48, 57, 13, 32, 44, 46, 69, 
	101, 9, 10, 43, 45, 48, 57, 13, 
	32, 44, 46, 9, 10, 43, 45, 48, 
	57, 46, 48, 57, 48, 57, 0, 13, 
	32, 44, 46, 65, 67, 69, 72, 76, 
	77, 81, 83, 84, 86, 90, 97, 99, 
	101, 104, 108, 109, 113, 115, 116, 118, 
	122, 9, 10, 48, 57, 0, 13, 32, 
	44, 46, 65, 67, 72, 76, 77, 81, 
	83, 84, 86, 90, 97, 99, 104, 108, 
	109, 113, 115, 116, 118, 122, 9, 10, 
	48, 57, 13, 32, 44, 46, 69, 101, 
	9, 10, 48, 57, 13, 32, 44, 46, 
	69, 101, 9, 10, 43, 45, 48, 57, 
	13, 32, 44, 46, 9, 10, 43, 45, 
	48, 57, 13, 32, 43, 45, 46, 9, 
	10, 48, 57, 48, 57, 13, 32, 44, 
	46, 69, 101, 9, 10, 43, 45, 48, 
	57, 13, 32, 44, 46, 48, 49, 9, 
	10, 43, 45, 50, 57, 13, 32, 43, 
	45, 46, 48, 49, 9, 10, 50, 57, 
	13, 32, 44, 46, 69, 101, 9, 10, 
	48, 57, 13, 32, 44, 48, 49, 9, 
	10, 13, 32, 48, 49, 9, 10, 13, 
	32, 44, 9, 10, 13, 32, 44, 46, 
	48, 49, 9, 10, 43, 45, 50, 57, 
	13, 32, 43, 45, 46, 48, 49, 9, 
	10, 50, 57, 13, 32, 44, 46, 69, 
	101, 9, 10, 43, 45, 48, 57, 13, 
	32, 44, 46, 9, 10, 43, 45, 48, 
	57, 46, 48, 57, 48, 57, 0, 13, 
	32, 44, 46, 65, 67, 69, 72, 76, 
	77, 81, 83, 84, 86, 90, 97, 99, 
	101, 104, 108, 109, 113, 115, 116, 118, 
	122, 9, 10, 43, 45, 48, 57, 13, 
	32, 43, 45, 46, 9, 10, 48, 57, 
	0, 13, 32, 44, 46, 65, 67, 69, 
	72, 76, 77, 81, 83, 84, 86, 90, 
	97, 99, 101, 104, 108, 109, 113, 115, 
	116, 118, 122, 9, 10, 48, 57, 13, 
	32, 43, 45, 46, 9, 10, 48, 57, 
	13, 32, 43, 45, 46, 9, 10, 48, 
	57, 46, 48, 57, 48, 57, 13, 32, 
	44, 46, 69, 101, 9, 10, 43, 45, 
	48, 57, 13, 32, 44, 46, 9, 10, 
	43, 45, 48, 57, 46, 48, 57, 48, 
	57, 13, 32, 44, 46, 69, 101, 9, 
	10, 43, 45, 48, 57, 13, 32, 44, 
	46, 9, 10, 43, 45, 48, 57, 46, 
	48, 57, 48, 57, 13, 32, 44, 46, 
	69, 101, 9, 10, 43, 45, 48, 57, 
	13, 32, 44, 46, 9, 10, 43, 45, 
	48, 57, 46, 48, 57, 48, 57, 13, 
	32, 44, 46, 69, 101, 9, 10, 43, 
	45, 48, 57, 13, 32, 44, 46, 9, 
	10, 43, 45, 48, 57, 46, 48, 57, 
	48, 57, 13, 32, 44, 46, 69, 101, 
	9, 10, 43, 45, 48, 57, 13, 32, 
	44, 46, 9, 10, 43, 45, 48, 57, 
	46, 48, 57, 48, 57, 0, 13, 32, 
	44, 46, 65, 67, 69, 72, 76, 77, 
	81, 83, 84, 86, 90, 97, 99, 101, 
	104, 108, 109, 113, 115, 116, 118, 122, 
	9, 10, 43, 45, 48, 57, 0, 13, 
	32, 44, 46, 65, 67, 72, 76, 77, 
	81, 83, 84, 86, 90, 97, 99, 104, 
	108, 109, 113, 115, 116, 118, 122, 9, 
	10, 43, 45, 48, 57, 13, 32, 44, 
	46, 69, 101, 9, 10, 43, 45, 48, 
	57, 13, 32, 43, 45, 46, 9, 10, 
	48, 57, 13, 32, 44, 46, 69, 101, 
	9, 10, 43, 45, 48, 57, 13, 32, 
	43, 45, 46, 9, 10, 48, 57, 13, 
	32, 44, 46, 69, 101, 9, 10, 43, 
	45, 48, 57, 13, 32, 43, 45, 46, 
	9, 10, 48, 57, 13, 32, 44, 46, 
	69, 101, 9, 10, 43, 45, 48, 57, 
	13, 32, 43, 45, 46, 9, 10, 48, 
	57, 13, 32, 44, 46, 69, 101, 9, 
	10, 43, 45, 48, 57, 13, 32, 43, 
	45, 46, 9, 10, 48, 57, 0, 13, 
	32, 44, 46, 65, 67, 69, 72, 76, 
	77, 81, 83, 84, 86, 90, 97, 99, 
	101, 104, 108, 109, 113, 115, 116, 118, 
	122, 9, 10, 43, 45, 48, 57, 43, 
	45, 48, 57, 48, 57, 0, 13, 32, 
	44, 46, 65, 67, 72, 76, 77, 81, 
	83, 84, 86, 90, 97, 99, 104, 108, 
	109, 113, 115, 116, 118, 122, 9, 10, 
	43, 45, 48, 57, 13, 32, 43, 45, 
	46, 9, 10, 48, 57, 13, 32, 43, 
	45, 46, 9, 10, 48, 57, 46, 48, 
	57, 48, 57, 0, 13, 32, 44, 46, 
	65, 67, 69, 72, 76, 77, 81, 83, 
	84, 86, 90, 97, 99, 101, 104, 108, 
	109, 113, 115, 116, 118, 122, 9, 10, 
	43, 45, 48, 57, 0, 13, 32, 44, 
	46, 65, 67, 72, 76, 77, 81, 83, 
	84, 86, 90, 97, 99, 104, 108, 109, 
	113, 115, 116, 118, 122, 9, 10, 43, 
	45, 48, 57, 46, 48, 57, 48, 57, 
	0, 13, 32, 44, 46, 65, 67, 69, 
	72, 76, 77, 81, 83, 84, 86, 90, 
	97, 99, 101, 104, 108, 109, 113, 115, 
	116, 118, 122, 9, 10, 43, 45, 48, 
	57, 13, 32, 43, 45, 46, 9, 10, 
	48, 57, 0, 13, 32, 44, 46, 65, 
	67, 69, 72, 76, 77, 81, 83, 84, 
	86, 90, 97, 99, 101, 104, 108, 109, 
	113, 115, 116, 118, 122, 9, 10, 43, 
	45, 48, 57, 43, 45, 48, 57, 48, 
	57, 0, 13, 32, 44, 46, 65, 67, 
	72, 76, 77, 81, 83, 84, 86, 90, 
	97, 99, 104, 108, 109, 113, 115, 116, 
	118, 122, 9, 10, 43, 45, 48, 57, 
	13, 32, 43, 45, 46, 9, 10, 48, 
	57, 13, 32, 43, 45, 46, 9, 10, 
	48, 57, 13, 32, 43, 45, 46, 9, 
	10, 48, 57, 46, 48, 57, 48, 57, 
	13, 32, 44, 46, 69, 101, 9, 10, 
	43, 45, 48, 57, 13, 32, 44, 46, 
	9, 10, 43, 45, 48, 57, 46, 48, 
	57, 48, 57, 13, 32, 44, 46, 69, 
	101, 9, 10, 43, 45, 48, 57, 13, 
	32, 44, 46, 9, 10, 43, 45, 48, 
	57, 46, 48, 57, 48, 57, 13, 32, 
	44, 46, 69, 101, 9, 10, 43, 45, 
	48, 57, 13, 32, 44, 46, 9, 10, 
	43, 45, 48, 57, 46, 48, 57, 48, 
	57, 0, 13, 32, 44, 46, 65, 67, 
	69, 72, 76, 77, 81, 83, 84, 86, 
	90, 97, 99, 101, 104, 108, 109, 113, 
	115, 116, 118, 122, 9, 10, 43, 45, 
	48, 57, 0, 13, 32, 44, 46, 65, 
	67, 72, 76, 77, 81, 83, 84, 86, 
	90, 97, 99, 104, 108, 109, 113, 115, 
	116, 118, 122, 9, 10, 43, 45, 48, 
	57, 13, 32, 44, 46, 69, 101, 9, 
	10, 43, 45, 48, 57, 13, 32, 43, 
	45, 46, 9, 10, 48, 57, 13, 32, 
	44, 46, 69, 101, 9, 10, 43, 45, 
	48, 57, 13, 32, 43, 45, 46, 9, 
	10, 48, 57, 13, 32, 44, 46, 69, 
	101, 9, 10, 43, 45, 48, 57, 13, 
	32, 43, 45, 46, 9, 10, 48, 57, 
	0, 13, 32, 44, 46, 65, 67, 69, 
	72, 76, 77, 81, 83, 84, 86, 90, 
	97, 99, 101, 104, 108, 109, 113, 115, 
	116, 118, 122, 9, 10, 43, 45, 48, 
	57, 43, 45, 48, 57, 48, 57, 0, 
	13, 32, 44, 46, 65, 67, 72, 76, 
	77, 81, 83, 84, 86, 90, 97, 99, 
	104, 108, 109, 113, 115, 116, 118, 122, 
	9, 10, 43, 45, 48, 57, 13, 32, 
	43, 45, 46, 9, 10, 48, 57, 13, 
	32, 43, 45, 46, 9, 10, 48, 57, 
	46, 48, 57, 48, 57, 13, 32, 44, 
	46, 69, 101, 9, 10, 43, 45, 48, 
	57, 13, 32, 44, 46, 9, 10, 43, 
	45, 48, 57, 46, 48, 57, 48, 57, 
	13, 32, 44, 46, 69, 101, 9, 10, 
	43, 45, 48, 57, 13, 32, 44, 46, 
	9, 10, 43, 45, 48, 57, 46, 48, 
	57, 48, 57, 13, 32, 44, 46, 69, 
	101, 9, 10, 43, 45, 48, 57, 13, 
	32, 44, 46, 9, 10, 43, 45, 48, 
	57, 46, 48, 57, 48, 57, 0, 13, 
	32, 44, 46, 65, 67, 69, 72, 76, 
	77, 81, 83, 84, 86, 90, 97, 99, 
	101, 104, 108, 109, 113, 115, 116, 118, 
	122, 9, 10, 43, 45, 48, 57, 0, 
	13, 32, 44, 46, 65, 67, 72, 76, 
	77, 81, 83, 84, 86, 90, 97, 99, 
	104, 108, 109, 113, 115, 116, 118, 122, 
	9, 10, 43, 45, 48, 57, 13, 32, 
	44, 46, 69, 101, 9, 10, 43, 45, 
	48, 57, 13, 32, 43, 45, 46, 9, 
	10, 48, 57, 13, 32, 44, 46, 69, 
	101, 9, 10, 43, 45, 48, 57, 13, 
	32, 43, 45, 46, 9, 10, 48, 57, 
	13, 32, 44, 46, 69, 101, 9, 10, 
	43, 45, 48, 57, 13, 32, 43, 45, 
	46, 9, 10, 48, 57, 0, 13, 32, 
	44, 46, 65, 67, 69, 72, 76, 77, 
	81, 83, 84, 86, 90, 97, 99, 101, 
	104, 108, 109, 113, 115, 116, 118, 122, 
	9, 10, 43, 45, 48, 57, 43, 45, 
	48, 57, 48, 57, 0, 13, 32, 44, 
	46, 65, 67, 72, 76, 77, 81, 83, 
	84, 86, 90, 97, 99, 104, 108, 109, 
	113, 115, 116, 118, 122, 9, 10, 43, 
	45, 48, 57, 13, 32, 43, 45, 46, 
	9, 10, 48, 57, 13, 32, 43, 45, 
	46, 9, 10, 48, 57, 46, 48, 57, 
	48, 57, 13, 32, 44, 46, 69, 101, 
	9, 10, 43, 45, 48, 57, 13, 32, 
	44, 46, 9, 10, 43, 45, 48, 57, 
	46, 48, 57, 48, 57, 0, 13, 32, 
	44, 46, 65, 67, 69, 72, 76, 77, 
	81, 83, 84, 86, 90, 97, 99, 101, 
	104, 108, 109, 113, 115, 116, 118, 122, 
	9, 10, 43, 45, 48, 57, 0, 13, 
	32, 44, 46, 65, 67, 72, 76, 77, 
	81, 83, 84, 86, 90, 97, 99, 104, 
	108, 109, 113, 115, 116, 118, 122, 9, 
	10, 43, 45, 48, 57, 13, 32, 44, 
	46, 69, 101, 9, 10, 43, 45, 48, 
	57, 13, 32, 43, 45, 46, 9, 10, 
	48, 57, 0, 13, 32, 44, 46, 65, 
	67, 69, 72, 76, 77, 81, 83, 84, 
	86, 90, 97, 99, 101, 104, 108, 109, 
	113, 115, 116, 118, 122, 9, 10, 43, 
	45, 48, 57, 43, 45, 48, 57, 48, 
	57, 0, 13, 32, 44, 46, 65, 67, 
	72, 76, 77, 81, 83, 84, 86, 90, 
	97, 99, 104, 108, 109, 113, 115, 116, 
	118, 122, 9, 10, 43, 45, 48, 57, 
	13, 32, 43, 45, 46, 9, 10, 48, 
	57, 13, 32, 43, 45, 46, 9, 10, 
	48, 57, 46, 48, 57, 48, 57, 0, 
	13, 32, 44, 46, 65, 67, 69, 72, 
	76, 77, 81, 83, 84, 86, 90, 97, 
	99, 101, 104, 108, 109, 113, 115, 116, 
	118, 122, 9, 10, 43, 45, 48, 57, 
	0, 13, 32, 44, 46, 65, 67, 72, 
	76, 77, 81, 83, 84, 86, 90, 97, 
	99, 104, 108, 109, 113, 115, 116, 118, 
	122, 9, 10, 43, 45, 48, 57, 46, 
	48, 57, 48, 57, 0, 13, 32, 44, 
	46, 65, 67, 69, 72, 76, 77, 81, 
	83, 84, 86, 90, 97, 99, 101, 104, 
	108, 109, 113, 115, 116, 118, 122, 9, 
	10, 43, 45, 48, 57, 13, 32, 43, 
	45, 46, 9, 10, 48, 57, 0, 13, 
	32, 44, 46, 65, 67, 69, 72, 76, 
	77, 81, 83, 84, 86, 90, 97, 99, 
	101, 104, 108, 109, 113, 115, 116, 118, 
	122, 9, 10, 43, 45, 48, 57, 43, 
	45, 48, 57, 48, 57, 0, 13, 32, 
	44, 46, 65, 67, 72, 76, 77, 81, 
	83, 84, 86, 90, 97, 99, 104, 108, 
	109, 113, 115, 116, 118, 122, 9, 10, 
	43, 45, 48, 57, 0, 13, 32, 65, 
	67, 72, 76, 77, 81, 83, 84, 86, 
	90, 97, 99, 104, 108, 109, 113, 115, 
	116, 118, 122, 9, 10, 0, 13, 32, 
	65, 67, 72, 76, 77, 81, 83, 84, 
	86, 90, 97, 99, 104, 108, 109, 113, 
	115, 116, 118, 122, 9, 10, 13, 32, 
	46, 9, 10, 48, 57, 13, 32, 43, 
	45, 46, 9, 10, 48, 57, 13, 32, 
	43, 45, 46, 9, 10, 48, 57, 0, 
	13, 32, 44, 46, 65, 67, 69, 72, 
	76, 77, 81, 83, 84, 86, 90, 97, 
	99, 101, 104, 108, 109, 113, 115, 116, 
	118, 122, 9, 10, 43, 45, 48, 57, 
	43, 45, 48, 57, 48, 57, 0, 13, 
	32, 44, 46, 65, 67, 72, 76, 77, 
	81, 83, 84, 86, 90, 97, 99, 104, 
	108, 109, 113, 115, 116, 118, 122, 9, 
	10, 43, 45, 48, 57, 0, 13, 32, 
	44, 46, 65, 67, 69, 72, 76, 77, 
	81, 83, 84, 86, 90, 97, 99, 101, 
	104, 108, 109, 113, 115, 116, 118, 122, 
	9, 10, 43, 45, 48, 57, 13, 32, 
	43, 45, 46, 9, 10, 48, 57, 13, 
	32, 43, 45, 46, 9, 10, 48, 57, 
	13, 32, 44, 46, 69, 101, 9, 10, 
	43, 45, 48, 57, 13, 32, 43, 45, 
	46, 9, 10, 48, 57, 0, 13, 32, 
	44, 46, 65, 67, 69, 72, 76, 77, 
	81, 83, 84, 86, 90, 97, 99, 101, 
	104, 108, 109, 113, 115, 116, 118, 122, 
	9, 10, 43, 45, 48, 57, 43, 45, 
	48, 57, 48, 57, 0, 13, 32, 44, 
	46, 65, 67, 72, 76, 77, 81, 83, 
	84, 86, 90, 97, 99, 104, 108, 109, 
	113, 115, 116, 118, 122, 9, 10, 43, 
	45, 48, 57, 13, 32, 43, 45, 46, 
	9, 10, 48, 57, 13, 32, 43, 45, 
	46, 9, 10, 48, 57, 13, 32, 43, 
	45, 46, 9, 10, 48, 57, 13, 32, 
	43, 45, 46, 9, 10, 48, 57, 0, 
	13, 32, 44, 46, 65, 67, 69, 72, 
	76, 77, 81, 83, 84, 86, 90, 97, 
	99, 101, 104, 108, 109, 113, 115, 116, 
	118, 122, 9, 10, 43, 45, 48, 57, 
	43, 45, 48, 57, 48, 57, 0, 13, 
	32, 44, 46, 65, 67, 72, 76, 77, 
	81, 83, 84, 86, 90, 97, 99, 104, 
	108, 109, 113, 115, 116, 118, 122, 9, 
	10, 43, 45, 48, 57, 0, 13, 32, 
	44, 46, 65, 67, 69, 72, 76, 77, 
	81, 83, 84, 86, 90, 97, 99, 101, 
	104, 108, 109, 113, 115, 116, 118, 122, 
	9, 10, 43, 45, 48, 57, 43, 45, 
	48, 57, 48, 57, 13, 32, 44, 46, 
	9, 10, 43, 45, 48, 57, 0, 13, 
	32, 44, 46, 65, 67, 69, 72, 76, 
	77, 81, 83, 84, 86, 90, 97, 99, 
	101, 104, 108, 109, 113, 115, 116, 118, 
	122, 9, 10, 43, 45, 48, 57, 43, 
	45, 48, 57, 48, 57, 13, 32, 44, 
	46, 9, 10, 43, 45, 48, 57, 43, 
	45, 48, 57, 48, 57, 13, 32, 44, 
	46, 9, 10, 43, 45, 48, 57, 43, 
	45, 48, 57, 48, 57, 13, 32, 44, 
	46, 9, 10, 43, 45, 48, 57, 43, 
	45, 48, 57, 48, 57, 13, 32, 44, 
	46, 9, 10, 43, 45, 48, 57, 43, 
	45, 48, 57, 48, 57, 13, 32, 44, 
	46, 9, 10, 43, 45, 48, 57, 43, 
	45, 48, 57, 48, 57, 13, 32, 44, 
	46, 9, 10, 43, 45, 48, 57, 43, 
	45, 48, 57, 48, 57, 13, 32, 44, 
	46, 9, 10, 43, 45, 48, 57, 0, 
	13, 32, 44, 46, 65, 67, 69, 72, 
	76, 77, 81, 83, 84, 86, 90, 97, 
	99, 101, 104, 108, 109, 113, 115, 116, 
	118, 122, 9, 10, 43, 45, 48, 57, 
	43, 45, 48, 57, 48, 57, 13, 32, 
	44, 46, 9, 10, 43, 45, 48, 57, 
	43, 45, 48, 57, 48, 57, 13, 32, 
	44, 46, 9, 10, 43, 45, 48, 57, 
	43, 45, 48, 57, 48, 57, 13, 32, 
	44, 46, 9, 10, 43, 45, 48, 57, 
	43, 45, 48, 57, 48, 57, 13, 32, 
	44, 46, 9, 10, 43, 45, 48, 57, 
	43, 45, 48, 57, 48, 57, 13, 32, 
	44, 46, 9, 10, 43, 45, 48, 57, 
	43, 45, 48, 57, 48, 57, 0, 13, 
	32, 44, 46, 65, 67, 72, 76, 77, 
	81, 83, 84, 86, 90, 97, 99, 104, 
	108, 109, 113, 115, 116, 118, 122, 9, 
	10, 48, 57, 43, 45, 48, 57, 48, 
	57, 0, 13, 32, 44, 46, 65, 67, 
	72, 76, 77, 81, 83, 84, 86, 90, 
	97, 99, 104, 108, 109, 113, 115, 116, 
	118, 122, 9, 10, 43, 45, 48, 57, 
	0, 13, 32, 44, 46, 65, 67, 69, 
	72, 76, 77, 81, 83, 84, 86, 90, 
	97, 99, 101, 104, 108, 109, 113, 115, 
	116, 118, 122, 9, 10, 43, 45, 48, 
	57, 13, 32, 43, 45, 46, 9, 10, 
	48, 57, 13, 32, 44, 46, 69, 101, 
	9, 10, 43, 45, 48, 57, 43, 45, 
	48, 57, 48, 57, 13, 32, 44, 46, 
	9, 10, 43, 45, 48, 57, 13, 32, 
	44, 46, 69, 101, 9, 10, 43, 45, 
	48, 57, 13, 32, 44, 9, 10, 13, 
	32, 44, 46, 69, 101, 9, 10, 48, 
	57, 43, 45, 48, 57, 48, 57, 13, 
	32, 44, 9, 10, 48, 57, 13, 32, 
	44, 46, 69, 101, 9, 10, 48, 57, 
	43, 45, 48, 57, 48, 57, 13, 32, 
	44, 46, 9, 10, 43, 45, 48, 57, 
	13, 32, 44, 46, 69, 101, 9, 10, 
	43, 45, 48, 57, 13, 32, 44, 46, 
	69, 101, 9, 10, 43, 45, 48, 57, 
	13, 32, 44, 46, 69, 101, 9, 10, 
	43, 45, 48, 57, 43, 45, 48, 57, 
	48, 57, 13, 32, 44, 46, 9, 10, 
	43, 45, 48, 57, 13, 32, 44, 46, 
	69, 101, 9, 10, 43, 45, 48, 57, 
	43, 45, 48, 57, 48, 57, 13, 32, 
	44, 46, 9, 10, 43, 45, 48, 57, 
	13, 32, 43, 45, 46, 9, 10, 48, 
	57, 43, 45, 48, 57, 48, 57, 13, 
	32, 44, 46, 9, 10, 48, 57, 13, 
	32, 43, 45, 46, 9, 10, 48, 57, 
	13, 32, 44, 9, 10, 13, 32, 44, 
	9, 10, 13, 32, 44, 46, 69, 101, 
	9, 10, 43, 45, 48, 57, 43, 45, 
	48, 57, 48, 57, 0, 13, 32, 44, 
	46, 65, 67, 72, 76, 77, 81, 83, 
	84, 86, 90, 97, 99, 104, 108, 109, 
	113, 115, 116, 118, 122, 9, 10, 43, 
	45, 48, 57, 43, 45, 48, 57, 48, 
	57, 13, 32, 44, 46, 9, 10, 43, 
	45, 48, 57, 0
};

static const char _svg_path_single_lengths[] = {
	0, 5, 5, 5, 1, 0, 6, 4, 
	1, 0, 27, 25, 1, 0, 6, 4, 
	1, 0, 27, 5, 6, 5, 27, 3, 
	3, 0, 6, 4, 3, 0, 6, 4, 
	1, 0, 5, 5, 4, 3, 5, 4, 
	3, 4, 1, 0, 6, 4, 1, 0, 
	27, 25, 6, 6, 4, 5, 0, 6, 
	6, 7, 6, 5, 4, 3, 6, 7, 
	6, 4, 1, 0, 27, 5, 27, 5, 
	5, 1, 0, 6, 4, 1, 0, 6, 
	4, 1, 0, 6, 4, 1, 0, 6, 
	4, 1, 0, 6, 4, 1, 0, 27, 
	25, 6, 5, 6, 5, 6, 5, 6, 
	5, 6, 5, 27, 2, 0, 25, 5, 
	5, 1, 0, 27, 25, 1, 0, 27, 
	5, 27, 2, 0, 25, 5, 5, 5, 
	1, 0, 6, 4, 1, 0, 6, 4, 
	1, 0, 6, 4, 1, 0, 27, 25, 
	6, 5, 6, 5, 6, 5, 27, 2, 
	0, 25, 5, 5, 1, 0, 6, 4, 
	1, 0, 6, 4, 1, 0, 6, 4, 
	1, 0, 27, 25, 6, 5, 6, 5, 
	6, 5, 27, 2, 0, 25, 5, 5, 
	1, 0, 6, 4, 1, 0, 27, 25, 
	6, 5, 27, 2, 0, 25, 5, 5, 
	1, 0, 27, 25, 1, 0, 27, 5, 
	27, 2, 0, 25, 23, 23, 3, 5, 
	5, 27, 2, 0, 25, 27, 5, 5, 
	6, 5, 27, 2, 0, 25, 5, 5, 
	5, 5, 27, 2, 0, 25, 27, 2, 
	0, 4, 27, 2, 0, 4, 2, 0, 
	4, 2, 0, 4, 2, 0, 4, 2, 
	0, 4, 2, 0, 4, 2, 0, 4, 
	27, 2, 0, 4, 2, 0, 4, 2, 
	0, 4, 2, 0, 4, 2, 0, 4, 
	2, 0, 25, 2, 0, 25, 27, 5, 
	6, 2, 0, 4, 6, 3, 6, 2, 
	0, 3, 6, 2, 0, 4, 6, 6, 
	6, 2, 0, 4, 6, 2, 0, 4, 
	5, 2, 0, 4, 5, 3, 3, 6, 
	2, 0, 25, 2, 0, 4, 0
};

static const char _svg_path_range_lengths[] = {
	0, 1, 2, 2, 1, 1, 3, 3, 
	1, 1, 3, 3, 1, 1, 3, 3, 
	1, 1, 3, 2, 3, 2, 3, 2, 
	2, 1, 2, 2, 2, 1, 3, 3, 
	1, 1, 2, 1, 1, 1, 1, 1, 
	1, 3, 1, 1, 3, 3, 1, 1, 
	2, 2, 2, 3, 3, 2, 1, 3, 
	3, 2, 2, 1, 1, 1, 3, 2, 
	3, 3, 1, 1, 3, 2, 2, 2, 
	2, 1, 1, 3, 3, 1, 1, 3, 
	3, 1, 1, 3, 3, 1, 1, 3, 
	3, 1, 1, 3, 3, 1, 1, 3, 
	3, 3, 2, 3, 2, 3, 2, 3, 
	2, 3, 2, 3, 1, 1, 3, 2, 
	2, 1, 1, 3, 3, 1, 1, 3, 
	2, 3, 1, 1, 3, 2, 2, 2, 
	1, 1, 3, 3, 1, 1, 3, 3, 
	1, 1, 3, 3, 1, 1, 3, 3, 
	3, 2, 3, 2, 3, 2, 3, 1, 
	1, 3, 2, 2, 1, 1, 3, 3, 
	1, 1, 3, 3, 1, 1, 3, 3, 
	1, 1, 3, 3, 3, 2, 3, 2, 
	3, 2, 3, 1, 1, 3, 2, 2, 
	1, 1, 3, 3, 1, 1, 3, 3, 
	3, 2, 3, 1, 1, 3, 2, 2, 
	1, 1, 3, 3, 1, 1, 3, 2, 
	3, 1, 1, 3, 1, 1, 2, 2, 
	2, 3, 1, 1, 3, 3, 2, 2, 
	3, 2, 3, 1, 1, 3, 2, 2, 
	2, 2, 3, 1, 1, 3, 3, 1, 
	1, 3, 3, 1, 1, 3, 1, 1, 
	3, 1, 1, 3, 1, 1, 3, 1, 
	1, 3, 1, 1, 3, 1, 1, 3, 
	3, 1, 1, 3, 1, 1, 3, 1, 
	1, 3, 1, 1, 3, 1, 1, 3, 
	1, 1, 2, 1, 1, 3, 3, 2, 
	3, 1, 1, 3, 3, 1, 2, 1, 
	1, 2, 2, 1, 1, 3, 3, 3, 
	3, 1, 1, 3, 3, 1, 1, 3, 
	2, 1, 1, 2, 2, 1, 1, 3, 
	1, 1, 3, 1, 1, 3, 0
};

static const short _svg_path_index_offsets[] = {
	0, 0, 7, 15, 23, 26, 28, 38, 
	46, 49, 51, 82, 111, 114, 116, 126, 
	134, 137, 139, 170, 178, 188, 196, 227, 
	233, 239, 241, 250, 257, 263, 265, 275, 
	283, 286, 288, 296, 303, 309, 314, 321, 
	327, 332, 340, 343, 345, 355, 363, 366, 
	368, 398, 426, 435, 445, 453, 461, 463, 
	473, 483, 493, 502, 509, 515, 520, 530, 
	540, 550, 558, 561, 563, 594, 602, 632, 
	640, 648, 651, 653, 663, 671, 674, 676, 
	686, 694, 697, 699, 709, 717, 720, 722, 
	732, 740, 743, 745, 755, 763, 766, 768, 
	799, 828, 838, 846, 856, 864, 874, 882, 
	892, 900, 910, 918, 949, 953, 955, 984, 
	992, 1000, 1003, 1005, 1036, 1065, 1068, 1070, 
	1101, 1109, 1140, 1144, 1146, 1175, 1183, 1191, 
	1199, 1202, 1204, 1214, 1222, 1225, 1227, 1237, 
	1245, 1248, 1250, 1260, 1268, 1271, 1273, 1304, 
	1333, 1343, 1351, 1361, 1369, 1379, 1387, 1418, 
	1422, 1424, 1453, 1461, 1469, 1472, 1474, 1484, 
	1492, 1495, 1497, 1507, 1515, 1518, 1520, 1530, 
	1538, 1541, 1543, 1574, 1603, 1613, 1621, 1631, 
	1639, 1649, 1657, 1688, 1692, 1694, 1723, 1731, 
	1739, 1742, 1744, 1754, 1762, 1765, 1767, 1798, 
	1827, 1837, 1845, 1876, 1880, 1882, 1911, 1919, 
	1927, 1930, 1932, 1963, 1992, 1995, 1997, 2028, 
	2036, 2067, 2071, 2073, 2102, 2127, 2152, 2158, 
	2166, 2174, 2205, 2209, 2211, 2240, 2271, 2279, 
	2287, 2297, 2305, 2336, 2340, 2342, 2371, 2379, 
	2387, 2395, 2403, 2434, 2438, 2440, 2469, 2500, 
	2504, 2506, 2514, 2545, 2549, 2551, 2559, 2563, 
	2565, 2573, 2577, 2579, 2587, 2591, 2593, 2601, 
	2605, 2607, 2615, 2619, 2621, 2629, 2633, 2635, 
	2643, 2674, 2678, 2680, 2688, 2692, 2694, 2702, 
	2706, 2708, 2716, 2720, 2722, 2730, 2734, 2736, 
	2744, 2748, 2750, 2778, 2782, 2784, 2813, 2844, 
	2852, 2862, 2866, 2868, 2876, 2886, 2891, 2900, 
	2904, 2906, 2912, 2921, 2925, 2927, 2935, 2945, 
	2955, 2965, 2969, 2971, 2979, 2989, 2993, 2995, 
	3003, 3011, 3015, 3017, 3024, 3032, 3037, 3042, 
	3052, 3056, 3058, 3087, 3091, 3093, 3101
};

static const short _svg_path_indicies[] = {
	0, 2, 2, 3, 4, 2, 1, 5, 
	5, 6, 6, 7, 5, 8, 1, 9, 
	9, 10, 10, 11, 9, 12, 1, 13, 
	14, 1, 15, 1, 16, 16, 18, 19, 
	20, 20, 16, 17, 15, 1, 21, 21, 
	23, 24, 21, 22, 25, 1, 26, 27, 
	1, 28, 1, 29, 30, 30, 32, 33, 
	34, 35, 36, 37, 38, 39, 40, 41, 
	42, 43, 44, 45, 46, 36, 47, 48, 
	49, 50, 51, 52, 53, 44, 30, 31, 
	28, 1, 0, 54, 54, 56, 57, 59, 
	60, 61, 62, 3, 63, 64, 65, 66, 
	67, 68, 69, 70, 71, 4, 72, 73, 
	74, 75, 67, 54, 55, 58, 1, 76, 
	77, 1, 78, 1, 79, 79, 81, 82, 
	83, 83, 79, 80, 78, 1, 84, 84, 
	86, 87, 84, 85, 88, 1, 89, 90, 
	1, 91, 1, 92, 93, 93, 95, 96, 
	97, 98, 99, 100, 101, 102, 103, 104, 
	105, 106, 107, 108, 109, 99, 110, 111, 
	112, 113, 114, 115, 116, 107, 93, 94, 
	91, 1, 56, 56, 55, 55, 57, 56, 
	58, 1, 79, 79, 81, 78, 83, 83, 
	79, 80, 77, 1, 86, 86, 85, 85, 
	87, 86, 88, 1, 92, 93, 93, 95, 
	91, 97, 98, 99, 100, 101, 102, 103, 
	104, 105, 106, 107, 108, 109, 99, 110, 
	111, 112, 113, 114, 115, 116, 107, 93, 
	94, 90, 1, 117, 117, 118, 117, 119, 
	1, 120, 120, 121, 120, 122, 1, 123, 
	1, 124, 124, 125, 126, 128, 128, 124, 
	127, 1, 129, 129, 130, 131, 129, 132, 
	1, 130, 130, 131, 130, 132, 1, 133, 
	1, 134, 134, 136, 137, 138, 138, 134, 
	135, 133, 1, 139, 139, 141, 142, 139, 
	140, 143, 1, 144, 145, 1, 146, 1, 
	147, 147, 148, 149, 149, 147, 146, 1, 
	150, 150, 151, 152, 153, 150, 1, 151, 
	151, 152, 153, 151, 1, 154, 154, 155, 
	154, 1, 156, 156, 157, 158, 159, 156, 
	1, 157, 157, 158, 159, 157, 1, 160, 
	160, 161, 160, 1, 162, 162, 164, 165, 
	162, 163, 166, 1, 167, 168, 1, 169, 
	1, 170, 170, 172, 173, 174, 174, 170, 
	171, 169, 1, 175, 175, 177, 178, 175, 
	176, 179, 1, 180, 181, 1, 182, 1, 
	183, 184, 184, 185, 186, 187, 188, 189, 
	190, 191, 192, 193, 194, 195, 196, 197, 
	198, 199, 189, 200, 201, 202, 203, 204, 
	205, 206, 197, 184, 182, 1, 0, 207, 
	207, 120, 121, 59, 60, 61, 62, 3, 
	63, 64, 65, 66, 67, 68, 69, 70, 
	71, 4, 72, 73, 74, 75, 67, 207, 
	122, 1, 124, 124, 125, 208, 128, 128, 
	124, 209, 1, 210, 210, 211, 212, 213, 
	213, 210, 135, 209, 1, 214, 214, 215, 
	216, 214, 140, 217, 1, 215, 215, 140, 
	140, 216, 215, 217, 1, 218, 1, 219, 
	219, 220, 137, 221, 221, 219, 135, 218, 
	1, 222, 222, 223, 142, 224, 225, 222, 
	140, 143, 1, 223, 223, 140, 140, 142, 
	224, 225, 223, 143, 1, 226, 226, 227, 
	146, 149, 149, 226, 145, 1, 228, 228, 
	229, 230, 231, 228, 1, 229, 229, 230, 
	231, 229, 1, 232, 232, 233, 232, 1, 
	234, 234, 235, 165, 236, 237, 234, 163, 
	166, 1, 235, 235, 163, 163, 165, 236, 
	237, 235, 166, 1, 238, 238, 239, 169, 
	174, 174, 238, 171, 168, 1, 240, 240, 
	242, 243, 240, 241, 244, 1, 245, 246, 
	1, 247, 1, 183, 170, 170, 172, 173, 
	187, 188, 248, 190, 191, 192, 193, 194, 
	195, 196, 197, 198, 199, 248, 200, 201, 
	202, 203, 204, 205, 206, 197, 170, 171, 
	247, 1, 177, 177, 176, 176, 178, 177, 
	179, 1, 183, 184, 184, 185, 182, 187, 
	188, 189, 190, 191, 192, 193, 194, 195, 
	196, 197, 198, 199, 189, 200, 201, 202, 
	203, 204, 205, 206, 197, 184, 181, 1, 
	249, 249, 250, 250, 251, 249, 252, 1, 
	253, 253, 254, 254, 255, 253, 256, 1, 
	257, 258, 1, 259, 1, 260, 260, 262, 
	263, 264, 264, 260, 261, 259, 1, 265, 
	265, 267, 268, 265, 266, 269, 1, 270, 
	271, 1, 272, 1, 273, 273, 275, 276, 
	277, 277, 273, 274, 272, 1, 278, 278, 
	280, 281, 278, 279, 282, 1, 283, 284, 
	1, 285, 1, 286, 286, 288, 289, 290, 
	290, 286, 287, 285, 1, 291, 291, 293, 
	294, 291, 292, 295, 1, 296, 297, 1, 
	298, 1, 299, 299, 301, 302, 303, 303, 
	299, 300, 298, 1, 304, 304, 306, 307, 
	304, 305, 308, 1, 309, 310, 1, 311, 
	1, 312, 312, 314, 315, 316, 316, 312, 
	313, 311, 1, 317, 317, 319, 320, 317, 
	318, 321, 1, 322, 323, 1, 324, 1, 
	325, 326, 326, 328, 329, 330, 331, 332, 
	333, 334, 335, 336, 337, 338, 339, 340, 
	341, 342, 332, 343, 344, 345, 346, 347, 
	348, 349, 340, 326, 327, 324, 1, 0, 
	350, 350, 253, 255, 59, 60, 61, 62, 
	3, 63, 64, 65, 66, 67, 68, 69, 
	70, 71, 4, 72, 73, 74, 75, 67, 
	350, 254, 256, 1, 260, 260, 262, 259, 
	264, 264, 260, 261, 258, 1, 267, 267, 
	266, 266, 268, 267, 269, 1, 273, 273, 
	275, 272, 277, 277, 273, 274, 271, 1, 
	280, 280, 279, 279, 281, 280, 282, 1, 
	286, 286, 288, 285, 290, 290, 286, 287, 
	284, 1, 293, 293, 292, 292, 294, 293, 
	295, 1, 299, 299, 301, 298, 303, 303, 
	299, 300, 297, 1, 306, 306, 305, 305, 
	307, 306, 308, 1, 312, 312, 314, 311, 
	316, 316, 312, 313, 310, 1, 319, 319, 
	318, 318, 320, 319, 321, 1, 325, 326, 
	326, 328, 324, 330, 331, 332, 333, 334, 
	335, 336, 337, 338, 339, 340, 341, 342, 
	332, 343, 344, 345, 346, 347, 348, 349, 
	340, 326, 327, 323, 1, 351, 351, 352, 
	1, 352, 1, 325, 326, 326, 328, 329, 
	330, 331, 333, 334, 335, 336, 337, 338, 
	339, 340, 341, 342, 343, 344, 345, 346, 
	347, 348, 349, 340, 326, 327, 352, 1, 
	353, 353, 354, 354, 355, 353, 356, 1, 
	357, 357, 358, 358, 359, 357, 360, 1, 
	361, 362, 1, 363, 1, 364, 365, 365, 
	367, 368, 370, 371, 372, 373, 374, 375, 
	376, 377, 378, 379, 380, 381, 382, 372, 
	383, 384, 385, 386, 387, 388, 389, 380, 
	365, 366, 369, 1, 0, 390, 390, 392, 
	393, 59, 60, 61, 62, 3, 63, 64, 
	65, 66, 67, 68, 69, 70, 71, 4, 
	72, 73, 74, 75, 67, 390, 391, 394, 
	1, 395, 396, 1, 397, 1, 364, 365, 
	365, 367, 368, 370, 371, 398, 373, 374, 
	375, 376, 377, 378, 379, 380, 381, 382, 
	398, 383, 384, 385, 386, 387, 388, 389, 
	380, 365, 366, 397, 1, 392, 392, 391, 
	391, 393, 392, 394, 1, 364, 365, 365, 
	367, 397, 370, 371, 398, 373, 374, 375, 
	376, 377, 378, 379, 380, 381, 382, 398, 
	383, 384, 385, 386, 387, 388, 389, 380, 
	365, 366, 396, 1, 399, 399, 400, 1, 
	400, 1, 364, 365, 365, 367, 368, 370, 
	371, 373, 374, 375, 376, 377, 378, 379, 
	380, 381, 382, 383, 384, 385, 386, 387, 
	388, 389, 380, 365, 366, 400, 1, 401, 
	401, 402, 402, 403, 401, 404, 1, 405, 
	405, 406, 406, 407, 405, 408, 1, 409, 
	409, 410, 410, 411, 409, 412, 1, 413, 
	414, 1, 415, 1, 416, 416, 418, 419, 
	420, 420, 416, 417, 415, 1, 421, 421, 
	423, 424, 421, 422, 425, 1, 426, 427, 
	1, 428, 1, 429, 429, 431, 432, 433, 
	433, 429, 430, 428, 1, 434, 434, 436, 
	437, 434, 435, 438, 1, 439, 440, 1, 
	441, 1, 442, 442, 444, 445, 446, 446, 
	442, 443, 441, 1, 447, 447, 449, 450, 
	447, 448, 451, 1, 452, 453, 1, 454, 
	1, 455, 456, 456, 458, 459, 460, 461, 
	462, 463, 464, 465, 466, 467, 468, 469, 
	470, 471, 472, 462, 473, 474, 475, 476, 
	477, 478, 479, 470, 456, 457, 454, 1, 
	0, 480, 480, 409, 411, 59, 60, 61, 
	62, 3, 63, 64, 65, 66, 67, 68, 
	69, 70, 71, 4, 72, 73, 74, 75, 
	67, 480, 410, 412, 1, 416, 416, 418, 
	415, 420, 420, 416, 417, 414, 1, 423, 
	423, 422, 422, 424, 423, 425, 1, 429, 
	429, 431, 428, 433, 433, 429, 430, 427, 
	1, 436, 436, 435, 435, 437, 436, 438, 
	1, 442, 442, 444, 441, 446, 446, 442, 
	443, 440, 1, 449, 449, 448, 448, 450, 
	449, 451, 1, 455, 456, 456, 458, 454, 
	460, 461, 462, 463, 464, 465, 466, 467, 
	468, 469, 470, 471, 472, 462, 473, 474, 
	475, 476, 477, 478, 479, 470, 456, 457, 
	453, 1, 481, 481, 482, 1, 482, 1, 
	455, 456, 456, 458, 459, 460, 461, 463, 
	464, 465, 466, 467, 468, 469, 470, 471, 
	472, 473, 474, 475, 476, 477, 478, 479, 
	470, 456, 457, 482, 1, 483, 483, 484, 
	484, 485, 483, 486, 1, 487, 487, 488, 
	488, 489, 487, 490, 1, 491, 492, 1, 
	493, 1, 494, 494, 496, 497, 498, 498, 
	494, 495, 493, 1, 499, 499, 501, 502, 
	499, 500, 503, 1, 504, 505, 1, 506, 
	1, 507, 507, 509, 510, 511, 511, 507, 
	508, 506, 1, 512, 512, 514, 515, 512, 
	513, 516, 1, 517, 518, 1, 519, 1, 
	520, 520, 522, 523, 524, 524, 520, 521, 
	519, 1, 525, 525, 527, 528, 525, 526, 
	529, 1, 530, 531, 1, 532, 1, 533, 
	534, 534, 536, 537, 538, 539, 540, 541, 
	542, 543, 544, 545, 546, 547, 548, 549, 
	550, 540, 551, 552, 553, 554, 555, 556, 
	557, 548, 534, 535, 532, 1, 0, 558, 
	558, 487, 489, 59, 60, 61, 62, 3, 
	63, 64, 65, 66, 67, 68, 69, 70, 
	71, 4, 72, 73, 74, 75, 67, 558, 
	488, 490, 1, 494, 494, 496, 493, 498, 
	498, 494, 495, 492, 1, 501, 501, 500, 
	500, 502, 501, 503, 1, 507, 507, 509, 
	506, 511, 511, 507, 508, 505, 1, 514, 
	514, 513, 513, 515, 514, 516, 1, 520, 
	520, 522, 519, 524, 524, 520, 521, 518, 
	1, 527, 527, 526, 526, 528, 527, 529, 
	1, 533, 534, 534, 536, 532, 538, 539, 
	540, 541, 542, 543, 544, 545, 546, 547, 
	548, 549, 550, 540, 551, 552, 553, 554, 
	555, 556, 557, 548, 534, 535, 531, 1, 
	559, 559, 560, 1, 560, 1, 533, 534, 
	534, 536, 537, 538, 539, 541, 542, 543, 
	544, 545, 546, 547, 548, 549, 550, 551, 
	552, 553, 554, 555, 556, 557, 548, 534, 
	535, 560, 1, 561, 561, 562, 562, 563, 
	561, 564, 1, 565, 565, 566, 566, 567, 
	565, 568, 1, 569, 570, 1, 571, 1, 
	572, 572, 574, 575, 576, 576, 572, 573, 
	571, 1, 577, 577, 579, 580, 577, 578, 
	581, 1, 582, 583, 1, 584, 1, 585, 
	586, 586, 588, 589, 590, 591, 592, 593, 
	594, 595, 596, 597, 598, 599, 600, 601, 
	602, 592, 603, 604, 605, 606, 607, 608, 
	609, 600, 586, 587, 584, 1, 0, 610, 
	610, 565, 567, 59, 60, 61, 62, 3, 
	63, 64, 65, 66, 67, 68, 69, 70, 
	71, 4, 72, 73, 74, 75, 67, 610, 
	566, 568, 1, 572, 572, 574, 571, 576, 
	576, 572, 573, 570, 1, 579, 579, 578, 
	578, 580, 579, 581, 1, 585, 586, 586, 
	588, 584, 590, 591, 592, 593, 594, 595, 
	596, 597, 598, 599, 600, 601, 602, 592, 
	603, 604, 605, 606, 607, 608, 609, 600, 
	586, 587, 583, 1, 611, 611, 612, 1, 
	612, 1, 585, 586, 586, 588, 589, 590, 
	591, 593, 594, 595, 596, 597, 598, 599, 
	600, 601, 602, 603, 604, 605, 606, 607, 
	608, 609, 600, 586, 587, 612, 1, 613, 
	613, 614, 614, 615, 613, 616, 1, 617, 
	617, 618, 618, 619, 617, 620, 1, 621, 
	622, 1, 623, 1, 624, 625, 625, 627, 
	628, 630, 631, 632, 633, 634, 635, 636, 
	637, 638, 639, 640, 641, 642, 632, 643, 
	644, 645, 646, 647, 648, 649, 640, 625, 
	626, 629, 1, 0, 650, 650, 652, 653, 
	59, 60, 61, 62, 3, 63, 64, 65, 
	66, 67, 68, 69, 70, 71, 4, 72, 
	73, 74, 75, 67, 650, 651, 654, 1, 
	655, 656, 1, 657, 1, 624, 625, 625, 
	627, 628, 630, 631, 658, 633, 634, 635, 
	636, 637, 638, 639, 640, 641, 642, 658, 
	643, 644, 645, 646, 647, 648, 649, 640, 
	625, 626, 657, 1, 652, 652, 651, 651, 
	653, 652, 654, 1, 624, 625, 625, 627, 
	657, 630, 631, 658, 633, 634, 635, 636, 
	637, 638, 639, 640, 641, 642, 658, 643, 
	644, 645, 646, 647, 648, 649, 640, 625, 
	626, 656, 1, 659, 659, 660, 1, 660, 
	1, 624, 625, 625, 627, 628, 630, 631, 
	633, 634, 635, 636, 637, 638, 639, 640, 
	641, 642, 643, 644, 645, 646, 647, 648, 
	649, 640, 625, 626, 660, 1, 661, 662, 
	662, 663, 664, 665, 666, 667, 668, 669, 
	670, 671, 672, 673, 674, 675, 676, 677, 
	678, 679, 680, 681, 672, 662, 1, 0, 
	682, 682, 59, 60, 61, 62, 3, 63, 
	64, 65, 66, 67, 68, 69, 70, 71, 
	4, 72, 73, 74, 75, 67, 682, 1, 
	683, 683, 684, 683, 685, 1, 686, 686, 
	687, 687, 688, 686, 689, 1, 690, 690, 
	691, 691, 692, 690, 693, 1, 364, 365, 
	365, 367, 694, 370, 371, 372, 373, 374, 
	375, 376, 377, 378, 379, 380, 381, 382, 
	372, 383, 384, 385, 386, 387, 388, 389, 
	380, 365, 366, 695, 1, 696, 696, 697, 
	1, 697, 1, 364, 365, 365, 367, 368, 
	370, 371, 373, 374, 375, 376, 377, 378, 
	379, 380, 381, 382, 383, 384, 385, 386, 
	387, 388, 389, 380, 365, 366, 698, 1, 
	364, 365, 365, 367, 699, 370, 371, 398, 
	373, 374, 375, 376, 377, 378, 379, 380, 
	381, 382, 398, 383, 384, 385, 386, 387, 
	388, 389, 380, 365, 366, 698, 1, 700, 
	700, 701, 701, 702, 700, 703, 1, 704, 
	704, 705, 705, 706, 704, 707, 1, 16, 
	16, 18, 15, 20, 20, 16, 17, 14, 
	1, 23, 23, 22, 22, 24, 23, 25, 
	1, 29, 30, 30, 32, 28, 34, 35, 
	36, 37, 38, 39, 40, 41, 42, 43, 
	44, 45, 46, 36, 47, 48, 49, 50, 
	51, 52, 53, 44, 30, 31, 27, 1, 
	708, 708, 709, 1, 709, 1, 29, 30, 
	30, 32, 33, 34, 35, 37, 38, 39, 
	40, 41, 42, 43, 44, 45, 46, 47, 
	48, 49, 50, 51, 52, 53, 44, 30, 
	31, 709, 1, 710, 710, 711, 711, 712, 
	710, 713, 1, 714, 714, 715, 715, 716, 
	714, 717, 1, 718, 718, 719, 719, 720, 
	718, 721, 1, 722, 722, 723, 723, 724, 
	722, 725, 1, 624, 625, 625, 627, 726, 
	630, 631, 632, 633, 634, 635, 636, 637, 
	638, 639, 640, 641, 642, 632, 643, 644, 
	645, 646, 647, 648, 649, 640, 625, 626, 
	727, 1, 728, 728, 729, 1, 729, 1, 
	624, 625, 625, 627, 628, 630, 631, 633, 
	634, 635, 636, 637, 638, 639, 640, 641, 
	642, 643, 644, 645, 646, 647, 648, 649, 
	640, 625, 626, 730, 1, 624, 625, 625, 
	627, 731, 630, 631, 658, 633, 634, 635, 
	636, 637, 638, 639, 640, 641, 642, 658, 
	643, 644, 645, 646, 647, 648, 649, 640, 
	625, 626, 730, 1, 732, 732, 733, 1, 
	733, 1, 16, 16, 18, 19, 16, 17, 
	733, 1, 624, 625, 625, 627, 731, 630, 
	631, 632, 633, 634, 635, 636, 637, 638, 
	639, 640, 641, 642, 632, 643, 644, 645, 
	646, 647, 648, 649, 640, 625, 626, 629, 
	1, 734, 734, 735, 1, 735, 1, 572, 
	572, 574, 575, 572, 573, 735, 1, 736, 
	736, 737, 1, 737, 1, 520, 520, 522, 
	523, 520, 521, 737, 1, 738, 738, 739, 
	1, 739, 1, 507, 507, 509, 510, 507, 
	508, 739, 1, 740, 740, 741, 1, 741, 
	1, 494, 494, 496, 497, 494, 495, 741, 
	1, 742, 742, 743, 1, 743, 1, 442, 
	442, 444, 445, 442, 443, 743, 1, 744, 
	744, 745, 1, 745, 1, 429, 429, 431, 
	432, 429, 430, 745, 1, 746, 746, 747, 
	1, 747, 1, 416, 416, 418, 419, 416, 
	417, 747, 1, 364, 365, 365, 367, 699, 
	370, 371, 372, 373, 374, 375, 376, 377, 
	378, 379, 380, 381, 382, 372, 383, 384, 
	385, 386, 387, 388, 389, 380, 365, 366, 
	369, 1, 748, 748, 749, 1, 749, 1, 
	312, 312, 314, 315, 312, 313, 749, 1, 
	750, 750, 751, 1, 751, 1, 299, 299, 
	301, 302, 299, 300, 751, 1, 752, 752, 
	753, 1, 753, 1, 286, 286, 288, 289, 
	286, 287, 753, 1, 754, 754, 755, 1, 
	755, 1, 273, 273, 275, 276, 273, 274, 
	755, 1, 756, 756, 757, 1, 757, 1, 
	260, 260, 262, 263, 260, 261, 757, 1, 
	758, 758, 759, 1, 759, 1, 183, 184, 
	184, 185, 186, 187, 188, 190, 191, 192, 
	193, 194, 195, 196, 197, 198, 199, 200, 
	201, 202, 203, 204, 205, 206, 197, 184, 
	759, 1, 760, 760, 761, 1, 761, 1, 
	183, 170, 170, 172, 173, 187, 188, 190, 
	191, 192, 193, 194, 195, 196, 197, 198, 
	199, 200, 201, 202, 203, 204, 205, 206, 
	197, 170, 171, 761, 1, 183, 170, 170, 
	172, 247, 187, 188, 248, 190, 191, 192, 
	193, 194, 195, 196, 197, 198, 199, 248, 
	200, 201, 202, 203, 204, 205, 206, 197, 
	170, 171, 246, 1, 242, 242, 241, 241, 
	243, 242, 244, 1, 170, 170, 172, 169, 
	174, 174, 170, 171, 168, 1, 762, 762, 
	763, 1, 763, 1, 170, 170, 172, 173, 
	170, 171, 763, 1, 764, 764, 765, 169, 
	174, 174, 764, 171, 168, 1, 766, 766, 
	767, 766, 1, 147, 147, 148, 146, 149, 
	149, 147, 145, 1, 768, 768, 769, 1, 
	769, 1, 147, 147, 148, 147, 769, 1, 
	770, 770, 771, 146, 149, 149, 770, 145, 
	1, 772, 772, 773, 1, 773, 1, 219, 
	219, 220, 137, 219, 135, 773, 1, 219, 
	219, 220, 218, 221, 221, 219, 135, 774, 
	1, 210, 210, 211, 126, 213, 213, 210, 
	135, 127, 1, 210, 210, 211, 775, 213, 
	213, 210, 135, 127, 1, 776, 776, 777, 
	1, 777, 1, 210, 210, 211, 126, 210, 
	135, 778, 1, 210, 210, 211, 775, 138, 
	138, 210, 135, 778, 1, 779, 779, 780, 
	1, 780, 1, 134, 134, 136, 137, 134, 
	135, 780, 1, 141, 141, 140, 140, 142, 
	141, 143, 1, 781, 781, 782, 1, 782, 
	1, 124, 124, 125, 126, 124, 778, 1, 
	164, 164, 163, 163, 165, 164, 166, 1, 
	783, 783, 784, 783, 1, 785, 785, 786, 
	785, 1, 134, 134, 136, 133, 138, 138, 
	134, 135, 787, 1, 788, 788, 789, 1, 
	789, 1, 92, 93, 93, 95, 96, 97, 
	98, 100, 101, 102, 103, 104, 105, 106, 
	107, 108, 109, 110, 111, 112, 113, 114, 
	115, 116, 107, 93, 94, 789, 1, 790, 
	790, 791, 1, 791, 1, 79, 79, 81, 
	82, 79, 80, 791, 1, 1, 0
};

static const short _svg_path_trans_targs_wi[] = {
	326, 0, 1, 2, 223, 3, 4, 5, 
	224, 3, 4, 5, 224, 5, 224, 6, 
	7, 8, 225, 9, 239, 7, 8, 225, 
	9, 226, 9, 226, 10, 326, 11, 12, 
	19, 13, 23, 71, 227, 111, 125, 2, 
	126, 154, 182, 198, 212, 214, 215, 216, 
	222, 223, 230, 231, 232, 233, 11, 12, 
	19, 13, 20, 23, 71, 111, 125, 126, 
	154, 182, 198, 212, 214, 215, 216, 222, 
	230, 231, 232, 233, 13, 20, 14, 15, 
	16, 21, 17, 323, 15, 16, 21, 17, 
	22, 17, 22, 18, 326, 11, 12, 19, 
	13, 23, 71, 320, 111, 125, 2, 126, 
	154, 182, 198, 212, 214, 215, 216, 222, 
	223, 230, 231, 232, 233, 24, 25, 50, 
	24, 25, 50, 26, 27, 28, 29, 304, 
	313, 27, 28, 29, 319, 30, 31, 32, 
	312, 33, 309, 31, 32, 312, 33, 294, 
	33, 294, 34, 35, 36, 295, 35, 36, 
	37, 318, 38, 39, 38, 39, 40, 317, 
	41, 316, 41, 42, 316, 43, 288, 43, 
	288, 44, 45, 46, 69, 47, 289, 45, 
	46, 69, 47, 70, 47, 70, 48, 326, 
	49, 24, 25, 23, 71, 280, 111, 125, 
	2, 126, 154, 182, 198, 212, 214, 215, 
	216, 222, 223, 230, 231, 232, 233, 49, 
	26, 51, 52, 53, 303, 305, 52, 53, 
	54, 302, 55, 56, 57, 299, 56, 57, 
	58, 298, 59, 60, 59, 60, 61, 293, 
	62, 63, 62, 63, 64, 292, 65, 287, 
	65, 66, 287, 67, 286, 67, 286, 68, 
	283, 72, 73, 74, 97, 72, 73, 74, 
	97, 74, 97, 75, 76, 77, 98, 78, 
	277, 76, 77, 98, 78, 99, 78, 99, 
	79, 80, 81, 100, 82, 274, 80, 81, 
	100, 82, 101, 82, 101, 83, 84, 85, 
	102, 86, 271, 84, 85, 102, 86, 103, 
	86, 103, 87, 88, 89, 104, 90, 268, 
	88, 89, 104, 90, 105, 90, 105, 91, 
	92, 93, 106, 94, 265, 92, 93, 106, 
	94, 107, 94, 107, 95, 326, 96, 73, 
	72, 74, 23, 71, 108, 111, 125, 2, 
	126, 154, 182, 198, 212, 214, 215, 216, 
	222, 223, 230, 231, 232, 233, 96, 109, 
	110, 112, 113, 114, 217, 112, 113, 114, 
	217, 114, 217, 115, 326, 116, 117, 120, 
	118, 264, 23, 71, 218, 111, 125, 2, 
	126, 154, 182, 198, 212, 214, 215, 216, 
	222, 223, 230, 231, 232, 233, 116, 117, 
	120, 118, 121, 118, 121, 119, 122, 123, 
	124, 19, 12, 13, 20, 127, 128, 129, 
	144, 127, 128, 129, 144, 129, 144, 130, 
	131, 132, 145, 133, 261, 131, 132, 145, 
	133, 146, 133, 146, 134, 135, 136, 147, 
	137, 258, 135, 136, 147, 137, 148, 137, 
	148, 138, 139, 140, 149, 141, 255, 139, 
	140, 149, 141, 150, 141, 150, 142, 326, 
	143, 128, 127, 129, 23, 71, 151, 111, 
	125, 2, 126, 154, 182, 198, 212, 214, 
	215, 216, 222, 223, 230, 231, 232, 233, 
	143, 152, 153, 155, 156, 157, 172, 155, 
	156, 157, 172, 157, 172, 158, 159, 160, 
	173, 161, 252, 159, 160, 173, 161, 174, 
	161, 174, 162, 163, 164, 175, 165, 249, 
	163, 164, 175, 165, 176, 165, 176, 166, 
	167, 168, 177, 169, 246, 167, 168, 177, 
	169, 178, 169, 178, 170, 326, 171, 156, 
	155, 157, 23, 71, 179, 111, 125, 2, 
	126, 154, 182, 198, 212, 214, 215, 216, 
	222, 223, 230, 231, 232, 233, 171, 180, 
	181, 183, 184, 185, 192, 183, 184, 185, 
	192, 185, 192, 186, 187, 188, 193, 189, 
	243, 187, 188, 193, 189, 194, 189, 194, 
	190, 326, 191, 184, 183, 185, 23, 71, 
	195, 111, 125, 2, 126, 154, 182, 198, 
	212, 214, 215, 216, 222, 223, 230, 231, 
	232, 233, 191, 196, 197, 199, 200, 201, 
	234, 199, 200, 201, 234, 201, 234, 202, 
	326, 203, 204, 207, 205, 242, 23, 71, 
	235, 111, 125, 2, 126, 154, 182, 198, 
	212, 214, 215, 216, 222, 223, 230, 231, 
	232, 233, 203, 204, 207, 205, 208, 205, 
	208, 206, 209, 210, 211, 326, 213, 23, 
	71, 111, 125, 2, 126, 154, 182, 198, 
	212, 214, 215, 216, 222, 223, 230, 231, 
	232, 233, 213, 24, 25, 50, 72, 73, 
	74, 97, 112, 113, 114, 217, 115, 217, 
	219, 220, 221, 119, 19, 12, 13, 20, 
	3, 4, 5, 224, 228, 229, 127, 128, 
	129, 144, 155, 156, 157, 172, 183, 184, 
	185, 192, 199, 200, 201, 234, 202, 234, 
	236, 237, 238, 206, 240, 241, 244, 245, 
	247, 248, 250, 251, 253, 254, 256, 257, 
	259, 260, 262, 263, 266, 267, 269, 270, 
	272, 273, 275, 276, 278, 279, 281, 282, 
	284, 285, 290, 291, 65, 287, 62, 63, 
	296, 297, 59, 60, 300, 301, 302, 30, 
	306, 307, 308, 310, 311, 314, 315, 41, 
	316, 38, 39, 319, 321, 322, 324, 325
};

static const unsigned char _svg_path_trans_actions_wi[] = {
	15, 0, 0, 0, 0, 9, 59, 59, 
	59, 0, 1, 1, 1, 0, 0, 0, 
	3, 17, 3, 17, 0, 0, 1, 0, 
	1, 1, 0, 0, 0, 72, 26, 68, 
	26, 68, 26, 26, 0, 26, 26, 26, 
	26, 26, 26, 26, 26, 26, 26, 26, 
	26, 26, 26, 26, 26, 26, 0, 1, 
	0, 1, 1, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 3, 
	17, 3, 17, 0, 0, 1, 0, 1, 
	1, 0, 0, 0, 80, 29, 76, 29, 
	76, 29, 29, 0, 29, 29, 29, 29, 
	29, 29, 29, 29, 29, 29, 29, 29, 
	29, 29, 29, 29, 29, 9, 59, 59, 
	0, 1, 1, 0, 3, 3, 17, 17, 
	0, 0, 0, 1, 1, 0, 3, 17, 
	3, 17, 0, 0, 1, 0, 1, 1, 
	0, 0, 0, 3, 3, 0, 0, 0, 
	0, 0, 7, 7, 0, 0, 0, 0, 
	7, 7, 0, 1, 0, 1, 1, 0, 
	0, 0, 3, 17, 3, 17, 0, 0, 
	1, 0, 1, 1, 0, 0, 0, 136, 
	50, 50, 132, 50, 50, 0, 50, 50, 
	50, 50, 50, 50, 50, 50, 50, 50, 
	50, 50, 50, 50, 50, 50, 50, 0, 
	17, 17, 3, 3, 17, 0, 0, 0, 
	1, 1, 0, 3, 3, 0, 0, 0, 
	1, 1, 23, 23, 0, 0, 0, 0, 
	7, 7, 0, 0, 1, 1, 56, 56, 
	0, 1, 0, 1, 1, 0, 0, 0, 
	0, 9, 59, 59, 59, 0, 1, 1, 
	1, 0, 0, 0, 3, 17, 3, 17, 
	0, 0, 1, 0, 1, 1, 0, 0, 
	0, 3, 17, 3, 17, 0, 0, 1, 
	0, 1, 1, 0, 0, 0, 3, 17, 
	3, 17, 0, 0, 1, 0, 1, 1, 
	0, 0, 0, 3, 17, 3, 17, 0, 
	0, 1, 0, 1, 1, 0, 0, 0, 
	3, 17, 3, 17, 0, 0, 1, 0, 
	1, 1, 0, 0, 0, 104, 38, 100, 
	38, 100, 38, 38, 0, 38, 38, 38, 
	38, 38, 38, 38, 38, 38, 38, 38, 
	38, 38, 38, 38, 38, 38, 0, 0, 
	0, 9, 59, 59, 59, 0, 1, 1, 
	1, 0, 0, 0, 88, 32, 84, 32, 
	84, 84, 32, 32, 0, 32, 32, 32, 
	32, 32, 32, 32, 32, 32, 32, 32, 
	32, 32, 32, 32, 32, 32, 0, 1, 
	0, 1, 1, 0, 0, 0, 0, 0, 
	0, 9, 59, 59, 59, 9, 59, 59, 
	59, 0, 1, 1, 1, 0, 0, 0, 
	3, 17, 3, 17, 0, 0, 1, 0, 
	1, 1, 0, 0, 0, 3, 17, 3, 
	17, 0, 0, 1, 0, 1, 1, 0, 
	0, 0, 3, 17, 3, 17, 0, 0, 
	1, 0, 1, 1, 0, 0, 0, 120, 
	44, 116, 44, 116, 44, 44, 0, 44, 
	44, 44, 44, 44, 44, 44, 44, 44, 
	44, 44, 44, 44, 44, 44, 44, 44, 
	0, 0, 0, 9, 59, 59, 59, 0, 
	1, 1, 1, 0, 0, 0, 3, 17, 
	3, 17, 0, 0, 1, 0, 1, 1, 
	0, 0, 0, 3, 17, 3, 17, 0, 
	0, 1, 0, 1, 1, 0, 0, 0, 
	3, 17, 3, 17, 0, 0, 1, 0, 
	1, 1, 0, 0, 0, 112, 41, 108, 
	41, 108, 41, 41, 0, 41, 41, 41, 
	41, 41, 41, 41, 41, 41, 41, 41, 
	41, 41, 41, 41, 41, 41, 0, 0, 
	0, 9, 59, 59, 59, 0, 1, 1, 
	1, 0, 0, 0, 3, 17, 3, 17, 
	0, 0, 1, 0, 1, 1, 0, 0, 
	0, 128, 47, 124, 47, 124, 47, 47, 
	0, 47, 47, 47, 47, 47, 47, 47, 
	47, 47, 47, 47, 47, 47, 47, 47, 
	47, 47, 0, 0, 0, 9, 59, 59, 
	59, 0, 1, 1, 1, 0, 0, 0, 
	96, 35, 92, 35, 92, 92, 35, 35, 
	0, 35, 35, 35, 35, 35, 35, 35, 
	35, 35, 35, 35, 35, 35, 35, 35, 
	35, 35, 0, 1, 0, 1, 1, 0, 
	0, 0, 0, 0, 0, 65, 13, 13, 
	13, 13, 13, 13, 13, 13, 13, 13, 
	13, 13, 13, 13, 13, 13, 13, 13, 
	13, 13, 0, 11, 62, 62, 11, 62, 
	62, 62, 11, 62, 62, 62, 84, 84, 
	0, 0, 84, 84, 11, 62, 62, 62, 
	11, 62, 62, 62, 0, 0, 11, 62, 
	62, 62, 11, 62, 62, 62, 11, 62, 
	62, 62, 11, 62, 62, 62, 92, 92, 
	0, 0, 92, 92, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 53, 53, 5, 5, 
	0, 0, 20, 20, 0, 0, 0, 17, 
	0, 0, 17, 0, 0, 0, 0, 5, 
	5, 5, 5, 0, 0, 0, 0, 0
};

static const int svg_path_start = 1;
static const int svg_path_first_final = 326;

static const int svg_path_en_main = 1;

#line 133 "/opt/shared/work/programming/eclipse/eclipse_3.3/lib2geom/src/svg-path-parser.rl"


void Parser::parse(char const *str)
throw(SVGPathParseError)
{
    char const *p = str;
    char const *start = NULL;
    int cs;

    _reset();

    
#line 1374 "/opt/shared/work/programming/eclipse/eclipse_3.3/lib2geom/src/svg-path-parser.cpp"
	{
	cs = svg_path_start;
	}

#line 1379 "/opt/shared/work/programming/eclipse/eclipse_3.3/lib2geom/src/svg-path-parser.cpp"
	{
	int _klen;
	unsigned int _trans;
	const char *_acts;
	unsigned int _nacts;
	const char *_keys;

	if ( cs == 0 )
		goto _out;
_resume:
	_keys = _svg_path_trans_keys + _svg_path_key_offsets[cs];
	_trans = _svg_path_index_offsets[cs];

	_klen = _svg_path_single_lengths[cs];
	if ( _klen > 0 ) {
		const char *_lower = _keys;
		const char *_mid;
		const char *_upper = _keys + _klen - 1;
		while (1) {
			if ( _upper < _lower )
				break;

			_mid = _lower + ((_upper-_lower) >> 1);
			if ( (*p) < *_mid )
				_upper = _mid - 1;
			else if ( (*p) > *_mid )
				_lower = _mid + 1;
			else {
				_trans += (_mid - _keys);
				goto _match;
			}
		}
		_keys += _klen;
		_trans += _klen;
	}

	_klen = _svg_path_range_lengths[cs];
	if ( _klen > 0 ) {
		const char *_lower = _keys;
		const char *_mid;
		const char *_upper = _keys + (_klen<<1) - 2;
		while (1) {
			if ( _upper < _lower )
				break;

			_mid = _lower + (((_upper-_lower) >> 1) & ~1);
			if ( (*p) < _mid[0] )
				_upper = _mid - 2;
			else if ( (*p) > _mid[1] )
				_lower = _mid + 2;
			else {
				_trans += ((_mid - _keys)>>1);
				goto _match;
			}
		}
		_trans += _klen;
	}

_match:
	_trans = _svg_path_indicies[_trans];
	cs = _svg_path_trans_targs_wi[_trans];

	if ( _svg_path_trans_actions_wi[_trans] == 0 )
		goto _again;

	_acts = _svg_path_actions + _svg_path_trans_actions_wi[_trans];
	_nacts = (unsigned int) *_acts++;
	while ( _nacts-- > 0 )
	{
		switch ( *_acts++ )
		{
	case 0:
#line 145 "/opt/shared/work/programming/eclipse/eclipse_3.3/lib2geom/src/svg-path-parser.rl"
	{
            start = p;
        }
	break;
	case 1:
#line 149 "/opt/shared/work/programming/eclipse/eclipse_3.3/lib2geom/src/svg-path-parser.rl"
	{
            char const *end=p;
            std::string buf(start, end);
            _push(g_ascii_strtod(buf.c_str(), NULL));
            start = NULL;
        }
	break;
	case 2:
#line 156 "/opt/shared/work/programming/eclipse/eclipse_3.3/lib2geom/src/svg-path-parser.rl"
	{
            _push(1.0);
        }
	break;
	case 3:
#line 160 "/opt/shared/work/programming/eclipse/eclipse_3.3/lib2geom/src/svg-path-parser.rl"
	{
            _push(0.0);
        }
	break;
	case 4:
#line 164 "/opt/shared/work/programming/eclipse/eclipse_3.3/lib2geom/src/svg-path-parser.rl"
	{
            _absolute = true;
        }
	break;
	case 5:
#line 168 "/opt/shared/work/programming/eclipse/eclipse_3.3/lib2geom/src/svg-path-parser.rl"
	{
            _absolute = false;
        }
	break;
	case 6:
#line 172 "/opt/shared/work/programming/eclipse/eclipse_3.3/lib2geom/src/svg-path-parser.rl"
	{
            _moveTo(_pop_point());
        }
	break;
	case 7:
#line 176 "/opt/shared/work/programming/eclipse/eclipse_3.3/lib2geom/src/svg-path-parser.rl"
	{
            _lineTo(_pop_point());
        }
	break;
	case 8:
#line 180 "/opt/shared/work/programming/eclipse/eclipse_3.3/lib2geom/src/svg-path-parser.rl"
	{
            _lineTo(Point(_pop_coord(X), _current[Y]));
        }
	break;
	case 9:
#line 184 "/opt/shared/work/programming/eclipse/eclipse_3.3/lib2geom/src/svg-path-parser.rl"
	{
            _lineTo(Point(_current[X], _pop_coord(Y)));
        }
	break;
	case 10:
#line 188 "/opt/shared/work/programming/eclipse/eclipse_3.3/lib2geom/src/svg-path-parser.rl"
	{
            Point p = _pop_point();
            Point c1 = _pop_point();
            Point c0 = _pop_point();
            _curveTo(c0, c1, p);
        }
	break;
	case 11:
#line 195 "/opt/shared/work/programming/eclipse/eclipse_3.3/lib2geom/src/svg-path-parser.rl"
	{
            Point p = _pop_point();
            Point c1 = _pop_point();
            _curveTo(_cubic_tangent, c1, p);
        }
	break;
	case 12:
#line 201 "/opt/shared/work/programming/eclipse/eclipse_3.3/lib2geom/src/svg-path-parser.rl"
	{
            Point p = _pop_point();
            Point c = _pop_point();
            _quadTo(c, p);
        }
	break;
	case 13:
#line 207 "/opt/shared/work/programming/eclipse/eclipse_3.3/lib2geom/src/svg-path-parser.rl"
	{
            Point p = _pop_point();
            _quadTo(_quad_tangent, p);
        }
	break;
	case 14:
#line 212 "/opt/shared/work/programming/eclipse/eclipse_3.3/lib2geom/src/svg-path-parser.rl"
	{
            Point point = _pop_point();
            bool sweep = _pop_flag();
            bool large_arc = _pop_flag();
            double angle = _pop();
            double ry = _pop();
            double rx = _pop();

            _arcTo(rx, ry, angle, large_arc, sweep, point);
        }
	break;
	case 15:
#line 223 "/opt/shared/work/programming/eclipse/eclipse_3.3/lib2geom/src/svg-path-parser.rl"
	{
            _closePath();
        }
	break;
	case 16:
#line 360 "/opt/shared/work/programming/eclipse/eclipse_3.3/lib2geom/src/svg-path-parser.rl"
	{goto _out;}
	break;
#line 1569 "/opt/shared/work/programming/eclipse/eclipse_3.3/lib2geom/src/svg-path-parser.cpp"
		}
	}

_again:
	if ( cs == 0 )
		goto _out;
	p += 1;
	goto _resume;
	_out: {}
	}
#line 370 "/opt/shared/work/programming/eclipse/eclipse_3.3/lib2geom/src/svg-path-parser.rl"


    if ( cs < svg_path_first_final ) {
        throw SVGPathParseError();
    }
}

}

void parse_svg_path(char const *str, SVGPathSink &sink)
throw(SVGPathParseError)
{
    Parser parser(sink);
    parser.parse(str);
    sink.finish();
}

}

/*
  Local Variables:
  mode:c++
  c-file-style:"stroustrup"
  c-file-offsets:((innamespace . 0)(inline-open . 0)(case-label . +))
  indent-tabs-mode:nil
  fill-column:99
  End:
*/
// vim: filetype=cpp:expandtab:shiftwidth=4:tabstop=8:softtabstop=4:encoding=utf-8:textwidth=99 :
