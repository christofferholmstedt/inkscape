/*
 * Copyright (c) 2004 World Wide Web Consortium,
 *
 * (Massachusetts Institute of Technology, European Research Consortium for
 * Informatics and Mathematics, Keio University). All Rights Reserved. This
 * work is distributed under the W3C(r) Software License [1] in the hope that
 * it will be useful, but WITHOUT ANY WARRANTY; without even the implied
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 *
 * [1] http://www.w3.org/Consortium/Legal/2002/copyright-software-20021231
 */

// File: http://www.w3.org/TR/2004/REC-DOM-Level-3-LS-20040407/ls.idl

#include "domimpl.h"
#include "eventsimpl.h"
#include "traversalimpl.h"
#include "lsimpl.h"



namespace org {
namespace w3c {
namespace dom {
namespace ls  {




/*#########################################################################
## DOMImplementationLSImpl
#########################################################################*/


/**
 *
 */
LSParser *DOMImplementationLSImpl::createLSParser(unsigned short mode,
                                     const DOMString &schemaType)
                                     throw (dom::DOMException)
{
    return NULL;
}

/**
 *
 */
LSSerializer *DOMImplementationLSImpl::createLSSerializer()
{
    return NULL;
}

/**
 *
 */
LSInput *DOMImplementationLSImpl::createLSInput()
{
    return NULL;
}

/**
 *
 */
LSOutput *DOMImplementationLSImpl::createLSOutput()
{
    return NULL;
}

//##################
//# Non-API methods
//##################

/**
 *
 */
DOMImplementationLSImpl::~DOMImplementationLSImpl()
{
}

/*#########################################################################
## LSParserImpl
#########################################################################*/


/**
 *
 */
DOMConfiguration *LSParserImpl::getDomConfig()
{
    return NULL;
}

/**
 *
 */
LSParserFilter *LSParserImpl::getFilter()
{
    return NULL;
}

/**
 *
 */
void LSParserImpl::setFilter(const LSParserFilter *val)
{
}

/**
 *
 */
bool LSParserImpl::getAsync()
{
    return false;
}

/**
 *
 */
bool LSParserImpl::getBusy()
{
    return false;
}

/**
 *
 */
Document *LSParserImpl::parse(const LSInput *input)
                            throw(dom::DOMException, LSException)
{
    return NULL;
}


/**
 *
 */
Document *LSParserImpl::parseURI(const DOMString &uri)
                               throw(dom::DOMException, LSException)
{
    return NULL;
}

   /**
 *
 */
Node *LSParserImpl::parseWithContext(const LSInput *input,
                                   const Node *contextArg,
                                   unsigned short action)
                                   throw(dom::DOMException, LSException)
{
    return NULL;
}

/**
 *
 */
void LSParserImpl::abort()
{
}



//##################
//# Non-API methods
//##################

/**
 *
 */
LSParserImpl::~LSParserImpl()
{
}


/*#########################################################################
## LSInputImpl
#########################################################################*/

/**
 *
 */
LSReader *LSInputImpl::getCharacterStream()
{
    return NULL;
}

/**
 *
 */
void LSInputImpl::setCharacterStream(const LSReader *val)
{
}

/**
 *
 */
LSInputStream *LSInputImpl::getByteStream()
{
    return NULL;
}

/**
 *
 */
void LSInputImpl::setByteStream(const LSInputStream *val)
{
}

/**
 *
 */
DOMString LSInputImpl::getStringData()
{
    return DOMString("");
}

/**
 *
 */
void LSInputImpl::setStringData(const DOMString &val)
{
}

/**
 *
 */
DOMString LSInputImpl::getSystemId()
{
    return DOMString("");
}

/**
 *
 */
void LSInputImpl::setSystemId(const DOMString &val)
{
}

/**
 *
 */
DOMString LSInputImpl::getPublicId()
{
    return DOMString("");
}

/**
 *
 */
void LSInputImpl::setPublicId(const DOMString &val)
{
}

/**
 *
 */
DOMString LSInputImpl::getBaseURI()
{
    return DOMString("");
}

/**
 *
 */
void LSInputImpl::setBaseURI(const DOMString &val)
{
}

/**
 *
 */
DOMString LSInputImpl::getEncoding()
{
    return DOMString("");
}

/**
 *
 */
void LSInputImpl::setEncoding(const DOMString &val)
{
}

/**
 *
 */
bool LSInputImpl::getCertifiedText()
{
    return false;
}

/**
 *
 */
void LSInputImpl::setCertifiedText(bool val)
{
}

//##################
//# Non-API methods
//##################

/**
 *
 */
LSInputImpl::~LSInputImpl()
{
}







/*#########################################################################
## LSResourceResolverImpl
#########################################################################*/

/**
 *
 */
LSInput *LSResourceResolverImpl::resolveResource(const DOMString &type,
                                     const DOMString &namespaceURI,
                                     const DOMString &publicId,
                                     const DOMString *systemId,
                                     const DOMString &baseURI)
{
}

//##################
//# Non-API methods
//##################

/**
 *
 */
LSResourceResolverImpl::~LSResourceResolverImpl()
{
}




/*#########################################################################
## LSParserFilterImpl
#########################################################################*/


/**
 *
 */
unsigned short LSParserFilterImpl::startElement(const Element *elementArg)
{
    return 0;
}

/**
 *
 */
unsigned short LSParserFilterImpl::acceptNode(const Node *nodeArg)
{
    return 0;
}

/**
 *
 */
unsigned long LSParserFilterImpl::getWhatToShow()
{
    return 0L;
}

//##################
//# Non-API methods
//##################

/**
 *
 */
LSParserFilterImpl::~LSParserFilterImpl()
{
}




/*#########################################################################
## LSSerializerImpl
#########################################################################*/


/**
 *
 */
DOMConfiguration *LSSerializerImpl::getDomConfig()
{
    return NULL;
}

/**
 *
 */
DOMString LSSerializerImpl::getNewLine()
{
    return DOMString("");
}

/**
 *
 */
void LSSerializerImpl::setNewLine(const DOMString &val)
{
}

/**
 *
 */
LSSerializerFilter *LSSerializerImpl::getFilter()
{
    return NULL;
}

/**
 *
 */
void LSSerializerImpl::setFilter(const LSSerializerFilter *val)
{
}

/**
 *
 */
bool LSSerializerImpl::write(const Node *nodeArg,
                       const LSOutput *destination)
                       throw (LSException)
{
    return false;
}

/**
 *
 */
bool LSSerializerImpl::writeToURI(const Node *nodeArg,
                               const DOMString &uri)
                               throw(LSException)
{
    return false;
}

/**
 *
 */
DOMString LSSerializerImpl::writeToString(const Node *nodeArg)
                                    throw(dom::DOMException, LSException)
{
    return DOMString("");
}

//##################
//# Non-API methods
//##################

/**
 *
 */
LSSerializerImpl::~LSSerializerImpl()
{
}




/*#########################################################################
## LSOutputImpl
#########################################################################*/

/**
 *
 */
LSWriter *LSOutputImpl::getCharacterStream()
{
    return NULL;
}

/**
 *
 */
void LSOutputImpl::setCharacterStream(const LSWriter *val)
{
}

/**
 *
 */
LSOutputStream *LSOutputImpl::getByteStream()
{
    return NULL;
}

/**
 *
 */
void LSOutputImpl::setByteStream(const LSOutputStream *val)
{
}

/**
 *
 */
DOMString LSOutputImpl::getSystemId()
{
    return DOMString("");
}

/**
 *
 */
void LSOutputImpl::setSystemId(const DOMString &val)
{
}

/**
 *
 */
DOMString LSOutputImpl::getEncoding()
{
    return DOMString("");
}

/**
 *
 */
void LSOutputImpl::setEncoding(const DOMString &val)
{
}


//##################
//# Non-API methods
//##################

/**
 *
 */
LSOutputImpl::~LSOutputImpl()
{
}



/*#########################################################################
## LSProgressEventImpl
#########################################################################*/

/**
 *
 */
LSInput *LSProgressEventImpl::getInput()
{
    return NULL;
}

/**
 *
 */
unsigned long LSProgressEventImpl::getPosition()
{
    return 0L;
}

/**
 *
 */
unsigned long LSProgressEventImpl::getTotalSize()
{
    return 0L;
}

//##################
//# Non-API methods
//##################

/**
 *
 */
LSProgressEventImpl::~LSProgressEventImpl()
{
}



/*#########################################################################
## LSLoadEventImpl
#########################################################################*/

/**
 *
 */
Document *LSLoadEventImpl::getNewDocument()
{
    return NULL;
}

/**
 *
 */
LSInput *LSLoadEventImpl::getInput()
{
    return NULL;
}

//##################
//# Non-API methods
//##################

/**
 *
 */
LSLoadEventImpl::~LSLoadEventImpl()
{
}





/*#########################################################################
## LSSerializerFilterImpl
#########################################################################*/


/**
 *
 */
unsigned long  LSSerializerFilterImpl::getWhatToShow()
{
    return 0L;
}

//##################
//# Non-API methods
//##################

/**
 *
 */
LSSerializerFilterImpl::~LSSerializerFilterImpl()
{
}








}  //namespace ls
}  //namespace dom
}  //namespace w3c
}  //namespace org





/*#########################################################################
## E N D    O F    F I L E
#########################################################################*/

